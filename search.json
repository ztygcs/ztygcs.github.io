[{"categories":["tech","前端","TypeScript"],"content":"学习之前 理论基础 TypeScript并不是一门新的语言，准确来说它是JavaScript的超集。也就是说所有合法的JavaScript语言都可以在TypeScript中运行。\nTypeScript给JavaScript带来了强类型的定义。\n注意：TypeScript无法在浏览器中运行 因此我们编写完了TypeScript代码后需要借助编译器将TypeScript语言翻译成JavaScript。\n开发环境 在命令行中输入npm install -g typescript完成TypeScript的全局安装\nnpm install -g typescript 查看版本信息\ntsc -v 编写完ts文件（test.ts）后通过以下指令编译\ntsc test.ts 我们可以看到当前目录下自动创建了一个test.js文件 运行js文件\nnode test.js 基础类型学习 数字 number类型既能表示整数也能表示浮点数，甚至也可以表示正负数\n1 2 3 4 5 6  function add(n1:number,n2:number){ return n1+n2 } add(1,2) //正常 add('1',2) //报错    限制add参数n1和n2必须为number类型\n 布尔 1  let isTrue:boolean;   字符串  \"hello\"\n  'hello'\n  `hello`: `` 可以创建一个字符串模板，在其中可以实现内容的分段、分行以及填充变量\n 1 2  let text1:string = 'hello'; let text2 = `${text1}world` //``定义模板字符串   数组 数组中可以存放任意类型的数据，并且可以同时存在\n1 2 3 4 5 6  let list1:number[] = [1,2,3,4] //定义元素类型为number的数组 let list2:Array\u003cnumber\u003e = [1,2,3,4] //使用泛型定义数组，效果同上 let list3 = [1,2,3,4] //不定义类型，效果同上  let list4 = [1,\"ddd\"] //这里定义的数组元素类型为（string|number），即元素要么是数字要么是字符串 let list5:any[] = [1,\"a\",true] //这里定义的数组元素可以存放任意类型   元组 1  let list1:[number,string] = [1,\"张三\"] //其实是一个固定长度、固定类型的数组   联合 1  let union:string|number //一个变量可以同时支持两个或多个类型   字面量 1 2  let literal: 0|1|2 //不仅确定类型范围，同时确定了取值范围 let literal2: 1|\"hello\"|true|[1,2,3,4] //结合字面量与联合类型灵活运用   枚举  枚举类型，顺序默认从0开始，也可自定义\n 1 2 3 4 5 6 7  enum Color{ red, //0  green, //1  blue //2 } let color = Color.blue console.log(color) //输出2，对应blue的顺序   1 2 3 4 5  enum Color{ red = 5, //5  green, //6  blue //7 }   1 2 3 4 5  enum Color{ red = 'red', //Color.red = 'red'  green = 'green', //Color.green = 'green'  blue = 1 //Color.blue = 1 }   any  任意类型,any类型的变量其类型可变\n 1 2 3 4  let randomValue:any = 6; randomValue = true; randomValue = \"hello\"; randomValue = {}   unknow 定义为unknow类型的变量在一定时候需要做逻辑判断，相比较any来说更安全\nvoid、undefined与never  void：不存在 undefined：存在但未定义  1 2 3 4 5 6 7 8  //函数throwError永远不会执行完（抛出了异常），其类型为never function throwError(message:string,errorCode:number):never{ throw{ message, errorCode } } throwError(\"not found\",404)   类型适配(类型断言) 1 2 3  let message:any message = \"abc\" message.endWith('c') //无法调用endWith()函数，其类型任为any   1 2 3  let message:any (\u003cstring\u003emessage) // 将message类型转为string (message as string)// 效果同上   面向对象 对象Object 1 2 3 4 5  const person = { name:'zhang', age:18 } console.log(person.age) //正常调用，输出18   1 2 3 4 5 6 7  const person ：{ name:string, age:number }= { name:'zhang', age:18 }   interface与class 1 2 3 4 5 6 7 8 9 10  let drawPoint = (point:Point) =\u003e{ console.log({point.x,point.y}) } drawPoint({x:100,y:50}) // 输出100,50 drawPoint({x:\"100\",y:\"50\"}) // 非法  interface Point{ x:number; y:number; }   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  interface IPoint{ x:number; y:number; drawPoint:()=\u003evoid; getDistances:(p:IPoint)=\u003enumber } class Point implements IPoint{ x:number; y:number; constructor(x:number,y:number){ this.x = x; this.y = y; } drawPoint = ()=\u003e{ console.log(\"x:\",this.x,\"y:\",this.y); } getDistances = (p:IPoint)=\u003e{ return Math.pow(p.x-this.x,2)+Math.pow(p.y-this.y,2) } } const point = Point(2,3)   ","description":"","tags":["TypeScript"],"title":"TypeScript入门介绍","uri":"/posts/typescript%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D/"},{"categories":["TECH","安卓"],"content":"1. 百度地图API SDK之Web服务API 1.1 服务介绍 1.1.1 普通IP定位 普通IP定位1是一套以HTTP/HTTPS形式提供的轻量级定位接口，用户可以通过该服务，根据IP定位来获取大致位置。 目前该服务同时支持 IPv4 和 IPv6 来获取位置信息。\n1.1.2 功能介绍 利用IP获取大致位置，调用API接口，返回请求参数中指定上网IP的大致位置信息（一般为城市级别），位置信息包括：经纬度、省、市等地址信息。 普通IP定位服务目前不支持海外场景。\n如果请求参数中未指定上网IP，则默认返回当前服务请求来源的IP所对应的大致位置信息。 该服务所返回的经纬度信息只是一个大概的位置，一般为城市中心点。\n1.1.3 适用场景 适用于对定位精度要求不高的IP请求定位的应用。\n如果您的应用为Android Native App，建议使用Android定位SDK，定位效果最佳，精度可达到10m，且无任何使用配额及并发量的限制。\n1.2 服务文档 1.2.1 请求URL   HTTP协议：http://api.map.baidu.com/location/ip?ak=您的AK\u0026ip=您的IP\u0026coor=bd09ll\n  HTTPS协议：https://api.map.baidu.com/location/ip?ak=您的AK\u0026ip=您的IP\u0026coor=bd09ll\n  1.2.2 请求参数    参数名称 参数含义 类型 备注     ip 用户上网的IP地址，请求中如果不出现或为空，会针对发来请求的IP进行定位。如您需要通过IPv6来获取位置信息，请提交工单申请。 string 可选   ak 开发者密钥，可在API控制台申请获得 string 必填   sn 若用户所用AK的校验方式为SN校验时该参数必填（什么是SN校验？）。其他AK校验方式的可不填写 string 可选   coor 设置返回位置信息中，经纬度的坐标类型，分别如下：\ncoor不出现、或为空：百度墨卡托坐标，即百度米制坐标\ncoor = bd09ll：百度经纬度坐标，在国测局坐标基础上二次加密而来\ncoor = gcj02：国测局02坐标，在原始GPS坐标基础上，按照国家测绘行业统一要求，加密后的坐标\n百度地图的坐标类型为bd09ll，如果结合百度地图使用，请注意坐标选择 string 可选    1.2.3 返回结果（JSON格式）  结果字段字段含义类型 address详细地址信息string contentaddress简要地址信息 address_detailcity城市 city_code百度城市代码 province省份 pointx当前城市中心点经度 y当前城市中心点纬度 status结果状态返回码，请参考后面的介绍   1.2.4 返回结果示例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  { address: \"CN|北京|北京|None|CHINANET|1|None\", #详细地址信息 content: #结构信息 { address: \"北京市\", #简要地址信息 address_detail: #结构化地址信息 { city: \"北京市\", #城市 city_code: 131, #百度城市代码 province: \"北京市\", #省份 }, point: #当前城市中心点 { x: \"116.39564504\", #当前城市中心点经度 y: \"39.92998578\" #当前城市中心点纬度 } }, status: 0 #结果状态返回码 }   1.2.5 接口错误码    状态码 定义 注释     0 正常    1 服务器内部错误 该服务响应超时或系统内部错误   10 上传内容超过8M Post上传数据不能超过8M   101 AK参数不存在 请求消息没有携带AK参数   102 Mcode参数不存在，mobile类型mcode参数必需 对于Mobile类型的应用请求需要携带mcode参数，该错误码代表服务器没有解析到mcode   200 APP不存在，AK有误请检查再重试 根据请求的AK，找不到对应的APP   201 APP被用户自己禁用，请在控制台解禁    202 APP被管理员删除 恶意APP被管理员删除   203 APP类型错误 当前API控制台支持Server(类型1), Mobile(类型2, 新版控制台区分为Mobile_Android(类型21)及Mobile_IPhone（类型22）及Browser（类型3），除此之外的其他类型被认为是APP类型错误   210 APP IP校验失败 在申请Server类型应用的时候选择IP校验，需要填写IP白名单，如果当前请求的IP地址不在IP白名单或者不是0.0.0.0/0就认为IP校验失败   211 APP SN校验失败 SERVER类型APP有两种校验方式：IP校验和SN校验，当用户请求的SN和服务端计算出来的SN不相等的时候，提示SN校验失败   220 APP Referer校验失败 浏览器类型的APP会校验referer字段是否存在，且在referer白名单里面，否则返回该错误码   230 APP Mcode码校验失败 服务器能解析到mcode，但和数据库中不一致，请携带正确的mcode   240 APP 服务被禁用 用户在API控制台中创建或设置某APP的时候禁用了某项服务   250 用户不存在 根据请求的user_id, 数据库中找不到该用户的信息，请携带正确的user_id   251 用户被自己删除 该用户处于未激活状态   252 用户被管理员删除 恶意用户被加入黑名单   260 服务不存在 服务器解析不到用户请求的服务名称   261 服务被禁用 该服务已下线   301 永久配额超限，限制访问 配额超限   302 天配额超限，限制访问 配额超限   401 当前并发量已经超过约定并发配额，限制访问 并发控制超限，请控制并发量   402 当前并发量已经超过约定并发配额，并且服务总并发量也已经超过设定的总并发配额，限制访问 并发控制超限，请控制并发量   1001 没有IPv6地址访问的权限 如需通过IPv6来获取位置信息，请提交工单申请    2. 移动端实现 2.1 通过ip获取经纬度 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  private Thread located_dataget = new Thread() { @Override public void run() { link = \"https://api.map.baidu.com/location/ip?ak=自己的ak\u0026ip=\"+dev_ip+\"\u0026coor=bd09ll\"; located_result = GData.requestGet(link); handler_located.postDelayed(located_datashow,1000); } }; private Runnable located_datashow = new Runnable() { @Override public void run() { if(located_result!=null){ //解析返回的json数据  } } }; private Runnable start = new Runnable() { @Override public void run() { located_dataget.start(); } };   2.1.1 浏览器直接访问返回结果示例 2.1.2 json解析获取经纬度 1 2 3 4 5 6 7 8 9 10 11  try{ JSONObject jsonObject1 = new JSONObject(located_result); String data1 = jsonObject1.getString(\"content\"); JSONObject jsonObject2 = new JSONObject(data1); String data2 = jsonObject2.getString(\"point\"); JSONObject jsonObject3 = new JSONObject(data2); latitude = jsonObject3.getString(\"y\"); longitude = jsonObject3.getString(\"x\"); }catch (Exception e){ e.printStackTrace(); }   2.2 通过经纬度返回详细位置 参考百度地图开发之全球逆地理编码2\n http://api.map.baidu.com/reverse_geocoding/v3/?ak=your's ak\u0026output=json\u0026coordtype=wgs84ll\u0026location=31.225696563611,121.49884033194  2.3 将详细位置在百度地图中显示 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116  public class Device_location_ip extends AppCompatActivity { private boolean isFirstLocate=true; private MapView mapView; private BaiduMap baiduMap; String link,result; private Handler handler = new Handler(); private String latitude,longitude; @Override protected void onCreate(Bundle savedInstanceState){ super.onCreate(savedInstanceState); //隐藏手机顶部状态栏  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); SDKInitializer.initialize(getApplicationContext()); setContentView(R.layout.device_location_ip); Intent intent = getIntent(); latitude = intent.getStringExtra(\"latitude\"); longitude = intent.getStringExtra(\"longitude\"); //获取控件MapView,先显示百度地图  mapView = (MapView) findViewById(R.id.mapview); baiduMap = mapView.getMap(); //允许在地图上显示我的位置  baiduMap.setMyLocationEnabled(true); navigateTo(Double.parseDouble(latitude),Double.parseDouble(longitude)); handler.post(start);、 } //对传入的经纬度参数进行处理，并在地图上显示出来  private void navigateTo(double laititude,double longitude) { if (isFirstLocate) { //Toast.makeText(this, \"nav to \" + location.getAddrStr(), Toast.LENGTH_SHORT).show();  LatLng ll = new LatLng(laititude, longitude); MapStatusUpdate update = MapStatusUpdateFactory.newLatLng(ll); baiduMap.animateMapStatus(update); update = MapStatusUpdateFactory.zoomTo(16f); baiduMap.animateMapStatus(update); isFirstLocate = false; } //在地图上显示我的位置  MyLocationData.Builder locationBuilder = new MyLocationData.Builder(); locationBuilder.latitude(laititude); locationBuilder.longitude(longitude); MyLocationData locationData = locationBuilder.build(); baiduMap.setMyLocationData(locationData); } @Override protected void onResume() { super.onResume(); mapView.onResume(); } @Override protected void onPause() { super.onPause(); mapView.onPause(); } @Override protected void onDestroy() { super.onDestroy(); mapView.onDestroy(); baiduMap.setMyLocationEnabled(false); } private Thread dataget = new Thread() { @Override public void run() { link = \"http://api.map.baidu.com/reverse_geocoding/v3/?ak=your's ak\u0026output=json\u0026coordtype=wgs84ll\u0026location=latitude,longitude\"; result = GData.requestGet(link); handler.postDelayed(datashow,1000); } }; private Runnable datashow = new Runnable() { @Override public void run() { if(result!=null){ Log.d(\"link\",link); Log.d(\"result:\", result); try{ JSONObject jsonObject1 = new JSONObject(result); String data1 = jsonObject1.getString(\"result\"); JSONObject jsonObject2 = new JSONObject(data1); }catch (Exception e){ e.printStackTrace(); } } } }; private Runnable start = new Runnable() { @Override public void run() { dataget.start(); } }; }     百度地图开放平台-普通IP定位 ↩︎\n 百度地图开放平台-全球逆地理编码 ↩︎\n   ","description":"","tags":["Android","IP定位"],"title":"IP定位的实现","uri":"/posts/ip%E5%AE%9A%E4%BD%8D%E7%9A%84%E5%AE%9E%E7%8E%B0/"},{"categories":["Tech","Hugo"],"content":"这篇文章主要是为了把大部分常用的LaTex数学符号和公式整理到一起，方便自己和大家以后查阅使用，虽然网上的相关文章很多，但我还是花了点时间自己整理了一下，基本上都是网友们整理过的相关内容。从公式的使用到公式的各种常用运算符再到一些数学常用符号和特定的数学公式形式以及其他相关符号的整理。内容肯定是不完善的，后续如果有需要更改或添加的地方，我会进行修改的。\n插入公式 行中公式 $y=x+1$ $y=x+1$\n独立公式 公式会另起一行居中显示\n$$y=x+1$$ $$y=x+1$$\n上下标    符号 说明     ^ 上标   _ 下标    如果上下标的内容多于一个字符，需要用{}将这些内容括成一个整体。上下标..可以嵌套..，也可以..同时使用..。\n例：\n$$ x^{y^z}=(1+e_1)^{xy^w} $$ $$ x^{y^z}=(1+e_1)^{xy^w} $$ 另外，如果要在左右两边都有上下标，可以用 \\sideset 命令。\n例：\n$$ \\sideset{^1_2}{^3_4}x $$ $$ \\sideset{^1_2}{^3_4}x $$\n括号的使用    命令 说明 预览     ( 圆括号（左） $($   ) 圆括号（右） $)$   [ 方括号（左） $[$   ] 方括号（右） $]$   \\\\{ 花括号（左） $\\{$   \\\\} 花括号（右） $\\}$    (、)、[、] 和 | 表示符号本身，使用 \\\\{来表示 {，\\\\} 来表示 }\n通过将 \\left与( ,\\right与) 结合使用，可以将括号大小随着其内容变化。其他括号同理。\n$$ {f}'(x) = ( \\frac{df}{dx} ) $$ $$ {f}'(x) = ( \\frac{df}{dx} ) $$\n$$ {f}'(x) = \\left( \\frac{df}{dx} \\right) $$ $$ {f}'(x) = \\left( \\frac{df}{dx} \\right) $$\n$$ {f}'(0) = \\left. \\frac{df}{dx} \\right|_{x=0} $$ $$ {f}'(0) = \\left. \\frac{df}{dx} \\right|_{x=0} $$\n运算表达式    命令 说明 预览     \\frac{a}{b} 分数 $\\frac{a}{b}$   \\sqrt[a]{b} 开方（a为2时可省略） $\\sqrt[a]{b}$   \\sum_{a}^{b} 求和 $\\sum_{a}^{b}$   \\prod_{a}^{b} 连乘 $\\prod_{a}^{b}$   {a+}\\ldots{+b} 省略号（与文本底线对齐） ${a+}\\ldots{+b}$   {a+}\\cdots{+b} 省略号（与文本中线对齐） ${a+}\\cdots{+b}$   \\vec{a} 矢量 $\\vec{a}$   lim_{{a} \\to {\\infty}} 极限 $lim_{{a} \\to {\\infty}}$   {f}'(x) 导数 ${f}'(x)$   \\int_{a}^{b}{x}\\,dx 积分 $\\int_{a}^{b}{x},dx$   \\int 积分号 $\\int$   \\iint 二重积分号 $\\iint$   \\iiint 三重积分号 $\\iiint$    矩阵 圆括号型 方法1 $$ \\begin{pmatrix} 1 \u0026 2 \u0026 3\\\\\\\\ 4 \u0026 5 \u0026 6 \\end{pmatrix} $$ $$ \\begin{pmatrix} 1 \u0026 2 \u0026 3\\\\\n4 \u0026 5 \u0026 6 \\end{pmatrix} $$\n方法2 $$ \\left( \\begin{matrix} 1 \u0026 2 \u0026 3 \\\\\\\\ 4 \u0026 5 \u0026 6 \\\\\\\\ 7 \u0026 8 \u0026 9 \\\\\\\\ \\end{matrix} \\right) $$ $$ \\left( \\begin{matrix} 1 \u0026 2 \u0026 3 \\\\\n4 \u0026 5 \u0026 6 \\\\\n7 \u0026 8 \u0026 9 \\\\\n\\end{matrix} \\right) $$\n方括号型 方法1 $$ \\begin{bmatrix} 1 \u0026 2 \u0026 3\\\\\\\\ 4 \u0026 5 \u0026 6 \\end{bmatrix} $$ $$ \\begin{bmatrix} 1 \u0026 2 \u0026 3\\\\\n4 \u0026 5 \u0026 6 \\end{bmatrix} $$\n方法2 $$ \\left[ \\begin{matrix} 1 \u0026 2 \u0026 3\\\\\\\\ 4 \u0026 5 \u0026 6 \\end{matrix} \\right] $$ $$ \\left[ \\begin{matrix} 1 \u0026 2 \u0026 3\\\\\n4 \u0026 5 \u0026 6 \\end{matrix} \\right] $$\n花括号型 方法1 $$ \\begin{Bmatrix} 1 \u0026 2 \u0026 3\\\\\\\\ 4 \u0026 5 \u0026 6 \\end{Bmatrix} $$ $$ \\begin{Bmatrix} 1 \u0026 2 \u0026 3\\\\\n4 \u0026 5 \u0026 6 \\end{Bmatrix} $$\n方法2 $$ \\left\\\\{ \\begin{matrix} 1 \u0026 2 \u0026 3\\\\\\\\ 4 \u0026 5 \u0026 6 \\end{matrix} \\right\\\\} $$ $$ \\left\\{ \\begin{matrix} 1 \u0026 2 \u0026 3\\\\\n4 \u0026 5 \u0026 6 \\end{matrix} \\right\\} $$\n行列式 方法1 \\begin{vmatrix} x \u0026 x \u0026 \\cdots \u0026 x\\\\\\\\ x \u0026 x \u0026 \\cdots \u0026 x\\\\\\\\ \\vdots \u0026 \\vdots \u0026 \\ddots \u0026 \\vdots\\\\\\\\ x \u0026 x \u0026 \\cdots \u0026 x\\\\\\\\ \\end{vmatrix} $$X= \\begin{vmatrix} x \u0026 x \u0026 \\cdots \u0026 x\\\\\nx \u0026 x \u0026 \\cdots \u0026 x\\\\\n\\vdots \u0026 \\vdots \u0026 \\ddots \u0026 \\vdots\\\\\nx \u0026 x \u0026 \\cdots \u0026 x\\\\\n\\end{vmatrix} $$\n方法2 $$X= \\left| \\begin{matrix} x \u0026 x \u0026 \\cdots \u0026 x\\\\\\\\ x \u0026 x \u0026 \\cdots \u0026 x\\\\\\\\ \\vdots \u0026 \\vdots \u0026 \\ddots \u0026 \\vdots\\\\\\\\ x \u0026 x \u0026 \\cdots \u0026 x\\\\\\\\ \\end{matrix} \\right| $$ $$X= \\left| \\begin{matrix} x \u0026 x \u0026 \\cdots \u0026 x\\\\\nx \u0026 x \u0026 \\cdots \u0026 x\\\\\n\\vdots \u0026 \\vdots \u0026 \\ddots \u0026 \\vdots\\\\\nx \u0026 x \u0026 \\cdots \u0026 x\\\\\n\\end{matrix} \\right| $$\n分段函数 $$f(n) = \\begin{cases} 2n, \u0026 \\text{if $n$ is even} \\\\\\\\ 3n, \u0026 \\text{if $n$ is odd} \\end{cases} $$ $$f(n) = \\begin{cases} 2n, \u0026 \\text{if $n$ is even} \\\\\n3n, \u0026 \\text{if $n$ is odd} \\end{cases} $$\n方程组 $$ \\left\\\\{ \\begin{array}{c} a_1x+b_1y+c_1z=d_1 \\\\\\\\ a_2x+b_2y+c_2z=d_2 \\\\\\\\ a_3x+b_3y+c_3z=d_3 \\end{array} \\right. $$ $$ \\left\\{ \\begin{array}{c} a_1x+b_1y+c_1z=d_1 \\\\ a_2x+b_2y+c_2z=d_2 \\\\\na_3x+b_3y+c_3z=d_3 \\end{array} \\right. $$\n数学常用符号 希腊字母 小写希腊字母    符号 指令 符号 指令 符号 指令     $\\alpha$ \\alpha $\\theta$ \\theta $o$ o   $\\beta$ \\beta $\\vartheta$ \\vartheta $\\pi$ \\pi   $\\gamma$ \\gamma $\\iota$ \\iota $\\varpi$ \\varpi   $\\delta$ \\delta $\\kappa$ \\kappa $\\rho$ \\rho   $\\epsilon$ \\epsilon $\\lambda$ \\lambda $\\varrho$ \\varrho   $\\varepsilon$ \\varepsilon $\\mu$ \\mu $\\sigma$ \\sigma   $\\zeta$ \\zeta $\\nu$ \\nu $\\varsigma$ \\varsigma   $\\eta$ \\eta $\\xi$ \\xi $\\tau$ \\tau   $\\upsilon$ \\upsilon $\\phi$ \\phi $\\varphi$ \\varphi   $\\chi$ \\chi $\\psi$ \\psi $\\omega$ \\omega    大写希腊字母    符号 指令 符号 指令 符号 指令     $\\Gamma$ \\Gamma $\\Lambda$ \\Lambda $\\Sigma$ \\Sigma   $\\Delta$ \\Delta $\\Xi$ \\Xi $\\Upsilon$ \\Upsilon   $\\Theta$ \\Theta $\\Pi$ \\Pi $\\Phi$ \\Phi   $\\Psi$ \\Psi $\\Omega$ \\Omega      运算符 二元运算符    符号 指令 符号 指令     $+$ + $\\pm$ \\pm   $\\ast$ \\ast $\\star$ \\star   $-$ - $\\mp$ \\mp   $\\times$ \\times $\\triangleleft$ \\triangleleft   $\\cup$ \\cup $\\sqcup$ \\sqcup   $\\div$ \\div $\\triangleright$ \\triangleright   $\\cdot$ \\cdot $\\circ$ \\circ   $\\cap$ \\cap $\\sqcap$ \\sqcap   $\\setminus$ \\setminus $\\bullet$ \\bullet   $\\oplus$ \\oplus $\\diamond$ \\diamond   $\\vee$ \\vee $\\wedge $ \\wedge   $\\ominus$ \\ominus $\\otimes$ \\otimes   $\\oslash$ \\oslash $\\odot$ \\odot   $\\uplus$ \\uplus $\\amalg$ \\\\amalg   $\\bigtriangleup$ \\bigtriangleup $\\dagger$ \\dagger   $\\bigtriangledown$ \\bigtriangledown $\\ddagger$ \\ddagger   $\\lhd$ \\lhd $\\unlhd$ \\unlhd   $\\rhd$ \\rhd $\\unrhd$ \\unrhd   $\\wr$ \\wr      大尺寸运算符    符号 指令 符号 指令     $\\sum$ \\sum $\\bigcup$ \\bigcup   $\\bigcap$ \\bigcap $\\bigvee$ \\bigvee   $\\bigoplus$ \\bigoplus $\\prod$ \\prod   $\\bigwedge$ \\bigwedge $\\bigotimes$ \\bigotimes   $\\coprod$ \\coprod $\\bigsqcup$ \\bigsqcup   $\\bigodot$ \\bigodot $\\biguplus$ \\biguplus    对数运算符    符号 指令 符号 指令 符号 指令     $\\log$ \\log $\\lg$ \\lg $\\ln$ \\ln    三角运算符    符号 指令 符号 指令 符号 指令     $30^\\circ$ 30^\\circ $\\bot$ \\bot $\\angle A$ \\angle A   $\\sin$ \\sin $\\cos$ \\cos $\\tan$ \\tan   $\\csc$ \\csc $\\sec$ \\sec $\\cot$ \\cot    微积分运算符    符号 指令 符号 指令 符号 指令     $\\int$ \\int $\\iint$ \\iint $\\iiint$ \\iiint   $\\iiiint$ \\iiiint $\\oint$ \\oint $\\prime$ \\prime   $\\lim$ \\lim $\\infty$ \\infty $\\nabla$ \\nabla    逻辑运算符    符号 指令 符号 指令 符号 指令     $\\because$ \\because $\\therefore$ \\therefore $\\not\\subset$ \\not\\subset   $\\forall$ \\forall $\\exists$ \\exists      关系符 二元关系符    符号 指令 符号 指令 符号 指令     $\u003e$ \u003e $\u003c$ \u003c $=$ =   $\\not\u003e$ \\not\u003e $\\not\u003c$ \\not\u003c $\\ne$ \\ne or \\not=   $\\le$ \\le $\\ge$ \\ge $\\equiv$ \\equiv   $\\ll$ \\ll $\\gg$ \\gg $\\doteq$ \\doteq   $\\prec$ \\prec $\\succ$ \\succ $\\sim$ \\sim   $\\preceq$ \\preceq $\\succeq$ \\succeq $\\simeq$ \\simeq   $\\subset$ \\subset $\\supset$ \\supset $\\approx$ \\approx   $\\subseteq$ \\subseteq $\\supseteq$ \\supseteq $\\cong$ \\cong   $\\sqsubset$ \\sqsubset $\\sqsupset$ \\sqsupset $\\Join$ \\Join   $\\sqsubseteq$ \\sqsubseteq $\\sqsupseteq$ \\sqsupseteq $\\bowtie$ \\bowtie   $\\in$ \\in $\\owns$ \\owns $\\propto$ \\propto   $\\vdash$ \\vdash $\\dashv$ \\dashv $\\models$ \\models   $\\mid$ \\mid $\\parallel$ \\parallel $\\perp$ \\perp   $\\smile$ \\smile $\\frown$ \\frown $\\asymp$ \\asymp   $\\notin$ \\notin $:$ :      戴帽符号    符号 指令 符号 指令     $\\hat{xy}$ \\hat{xy} $\\widehat{xyz}$ \\widehat{xyz}   $\\tilde{xy}$ \\tilde{xy} $\\widetilde{xyz}$ \\widetilde{xyz}   $\\check{x}$ \\check{x}  $\\breve{y}$ \\breve{y}   $\\grave{x}$ \\grave{x} $\\acute{y}$ \\acute{y}    连线符号    连线符号     \\fbox{a+b+c+d}   $\\fbox{a+b+c+d}$   \\overleftarrow{a+b+c+d}   $\\overleftarrow{a+b+c+d}$   \\overrightarrow{a+b+c+d}   $\\overrightarrow{a+b+c+d}$   \\overleftrightarrow{a+b+c+d}   $\\overleftrightarrow{a+b+c+d}$   \\underleftarrow{a+b+c+d}   $\\underleftarrow{a+b+c+d}$   \\underrightarrow{a+b+c+d}   $\\underrightarrow{a+b+c+d}$   \\underleftrightarrow{a+b+c+d}   $\\underleftrightarrow{a+b+c+d}$   \\overline{a+b+c+d}   $\\overline{a+b+c+d}$   \\underline{a+b+c+d}   $\\underline{a+b+c+d}$   \\overbrace{a+b+c+d}^{Sample}   $\\overbrace{a+b+c+d}^{Sample}$   \\underbrace{a+b+c+d}_{Sample}   $\\underbrace{a+b+c+d}_{Sample}$   \\overbrace{a+\\underbrace{b+c}_{1.0}+d}^{2.0}   $\\overbrace{a+\\underbrace{b+c}_{1.0}+d}^{2.0}$   \\underbrace{a\\cdot a\\cdots a}_{b\\text{ times}}   $\\underbrace{a\\cdot a\\cdots a}_{b\\text{ times}}$    箭头    符号 指令     $\\uparrow$ \\uparrow   $\\downarrow$ \\downarrow   $\\gets$ \\gets or \\leftarrow   $\\longleftarrow$ \\longleftarrow   $\\to$ \\to or \\rightarrow   $\\longrightarrow$ \\longrightarrow   $\\leftrightarrow$ \\leftrightarrow   $\\longleftrightarrow$ \\longleftrightarrow   $\\updownarrow$ \\updownarrow   $\\Leftarrow$ \\Leftarrow   $\\Longleftarrow$ \\Longleftarrow   $\\Uparrow$ \\Uparrow   $\\Rightarrow$ \\Rightarrow   $\\Longrightarrow$ \\Longrightarrow   $\\Downarrow$ \\Downarrow   $\\Leftrightarrow$ \\Leftrightarrow   $\\Longleftrightarrow$ \\Longleftrightarrow   $\\Updownarrow$ \\Updownarrow   $\\mapsto$ \\mapsto   $\\longmapsto$ \\longmapsto   $\\nearrow$ \\nearrow   $\\hookleftarrow$ \\hookleftarrow   $\\hookrightarrow$ \\hookrightarrow   $\\searrow$ \\searrow   $\\leftharpoonup$ \\leftharpoonup   $\\rightharpoonup$ \\rightharpoonup   $\\swarrow$ \\swarrow   $\\leftharpoondown$ \\leftharpoondown   $\\rightharpoondown$ \\rightharpoondown   $\\nwarrow$ \\nwarrow   $\\rightleftharpoons$ \\rightleftharpoons   $\\iff$ \\iff   $\\leadsto$ \\leadsto    定界符    符号 指令 符号 指令 符号 指令     $($ ( $)$ ) $\\langle$ \\langle   $[$ [ $]$ ] $\\rangle$ \\rangle   $\\{$ \\\\{ $\\}$ \\\\} $\\vert$ \\vert   $\\lfloor$ \\lfloor $\\rfloor$ \\rfloor $\\Vert$ \\Vert   $\\lceil$ \\lceil $\\rceil$ \\rceil $/$ /    其他符号    符号 指令 符号 指令     $\\dots$ \\dots $\\cdots$ \\cdots   $\\vdots$ \\vdots $\\ddots$ \\ddots   $\\hbar$ \\hbar $\\imath$ \\imath   $\\jmath$ \\jmath $\\ell$ \\ell   $\\Re$ \\Re $\\Im$ \\Im   $\\aleph$ \\aleph $\\wp$ \\wp   $\\partial$ \\partial $'$ '   $\\emptyset$ \\emptyset $\\triangle$ \\triangle   $\\Box$ \\Box $\\Diamond$ \\Diamond   $\\bot$ \\bot $\\top$ \\top   $\\angle$ \\angle $\\surd$ \\surd   $\\diamondsuit$ \\diamondsuit $\\heartsuit$ \\heartsuit   $\\clubsuit$ \\clubsuit $\\spadesuit$ \\spadesuit   $\\neg $ \\neg or \\lnot $\\flat$ \\flat   $\\natural$ \\natural $\\sharp$ \\sharp   $\\mho$ \\mho      ","description":"","tags":["LaTeX","数学公式"],"title":"LaTeX数学符号公式汇总","uri":"/posts/latex%E6%95%B0%E5%AD%A6%E7%AC%A6%E5%8F%B7%E4%B8%8E%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%B1%87%E6%80%BB/"},{"categories":["Tech","Hugo"],"content":"今天被一个博友咨询如何往博客中添加数学公式，（在这篇文章没写之前，我的博客还是不支持数学公式的），由于还没有支持数学公式的需求，所以我也一直没有折腾过这个。不过之前有看到过相关的文章，于是在网上找找资料便自己试了试，下面的内容是从网上摘录下来的部分笔记，完整的内容我已贴在了文章的最下面，欢迎访问原文。（本文只作自己的修改记录）\n在footer.html文件中添加代码 在主题文件夹（\\themes\\meme\\layouts\\partials\\custom）下的footer.html中，添加下面代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  \u003cscript type=\"text/x-mathjax-config\"\u003e MathJax.Hub.Config({ tex2jax: { inlineMath: [['$','$'], ['\\\\(','\\\\)']], displayMath: [['$$','$$'], ['\\[','\\]']], processEscapes: true, processEnvironments: true, skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'], TeX: { equationNumbers: { autoNumber: \"AMS\" }, extensions: [\"AMSmath.js\", \"AMSsymbols.js\"] } } }); \u003c/script\u003e \u003cscript type=\"text/javascript\" async src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML\"\u003e\u003c/script\u003e   这样自己的博客就已经可以插入数学公式了。\n在下篇文章《LaTeX数学符号公式汇总》中进一步了解如何使用各种数学符号与数学公式。\n作者：一念一觉一圣人 链接：https://www.jianshu.com/p/5fd2c9b3b638 来源：简书 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 ","description":"","tags":["MathJax"],"title":"MathJax渲染数学公式","uri":"/posts/hugo+mathjax%E5%AE%9E%E7%8E%B0%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E7%9A%84%E6%B8%B2%E6%9F%93/"},{"categories":["TECH","Hugo"],"content":"前几天参照网上的资源自己弄了个搜索框，主要是因为现在大部分的网页搜索首页老是会有一些杂乱的东西弹出来，关还关不掉。于是就自己想着整一个搜索界面。我的目的很简单，让界面看起来尽量简洁，因为是用来搜索资源的，所以一些无关紧要的东西都可以不要。参考Google浏览器的样式，于是就有了下面的极简搜索页面：只显示一个搜索框，其他的东西统统扔掉。\n今天突然想把这个搜索框整合到我的blog中来，哈哈哈，好像没多大的用，不过就是瞎折腾。这里我主要是记录一下加入百度搜索功能我做了哪些改变，说不定哪天不喜欢了我还可以参考这个记录把它给删掉。\n新增一个菜单项 首先在config.toml配置文件中的相应位置添加以下代码\n 文件位置：Hugo\\Sites\\blog\\config.toml\n 1 2 3 4 5 6 7 8 9 10 11 12  [[menu.main]] url = \"/about/\" name = \"关于\" weight = 5 pre = \"internal\" post = \"user-circle\" +\t[[menu.main]] + url = \"/search/\" + name = \"百度\" + weight = 6 + pre = \"internal\" + post = \"user-circle\"   下面是效果图 post = \"user-circle\"定义了菜单图标，这里我们先用..关于..菜单项的图标，等其他的问题解决了最后再来改图标。\n添加搜索样式 打开文件custom.scss\n 文件位置：Hugo\\Sites\\blog\\themes\\meme\\assets\\scss_custom\\custom.scss 在文件末尾加入样式代码\n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  //设置百度search样式 .searchbar { border: rgb(120, 120, 120) solid 2px; border-radius: 2em; /*左右边框为半圆*/ width: 80%; height: 40px; box-shadow: 0px 0px 10px rgb(125, 125, 125); margin: 0 auto; /*重要！整个搜索框居中对齐*/ padding: 4px; /*margin-top: 90px;\t*/ } .search{ height: 38px; border:none; /*取消默认的边框以设置自定义边框*/ outline:none; /*取消浏览器默认的蓝光边框以设置自定义的输入框*/ vertical-align: middle; /*background: #000000*/ background-color:transparent;/*搜索框与搜索按钮透明*/ width: 90%; margin-left: 10px; font: bolder; font-size: 20px; color:rgb(120, 120, 120);\t}   新建“百度”菜单的_index.md 在文件夹blog/content下新建文件夹search，并在search文件夹下新建文件_index.md，并写入以下代码\n1 2 3 4 5  \u003cdiv class=\"searchbar\"\u003e \u003cform action=\"https://www.baidu.com/baidu?ie=utf-8\" target=\"blank\"\u003e \u003cinput class=\"search\" type=\"text\" placeholder=\"\" autocomplete=\"off\" name=\"word\"\u003e \u003c/form\u003e \u003c/div\u003e   修改图标 在SVG图标下载里找到相应的图标（直接搜索关键词search），下载下来之后将该图标的svg代码复制进SVG.toml文件中(有些小地方需要修改，svg标签中加入class=\"icon\")，例如，下面是我的SVG.toml文件：\n 文件位置：Hugo\\Sites\\blog\\themes\\meme\\data\\SVG.toml\n 1 2 3  arrow-up = '\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" class=\"icon\"\u003e\u003cpath d=\"M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z\"/\u003e\u003c/svg\u003e' + search = '\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"icon\"\u003e\u003cpath fill=\"currentColor\" d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"\u003e\u003c/path\u003e\u003c/svg\u003e'    再到config.toml文件中将百度菜单下的 post = \"user-circle\" 改为 post = \"search\"\n最后效果 ","description":"","tags":["百度搜索框","Hugo"],"title":"Blog中加入百度搜索","uri":"/posts/blog%E4%B8%AD%E5%8A%A0%E5%85%A5%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2/"},{"categories":["TECH","前端"],"content":"Tweenlite，是webgame开发人员比较常用的一个缓动库。\n可以去https://www.tweenmax.com.cn/start/下载TweenMax.min.js文件并引入\nTweenMax使用方法 载入TweenMax.js插件 首先下载TweenMax文件包(greensock-js)，找到TweenMax.min.js压缩文件。\n 文件位置： greensock-js/src/minified/TweenMax.min.js\n 或者使用TweenMax的CDN。\n  下载TweenMax\n  TweenMax CDN\n  在页面中载入TweenMax.min.js文件\n1  \u003cscript src=\"js/TweenMax.min.js\"\u003e \u003c/script\u003e   由于TweenMax.min.js集合了所有功能，所以引入TweenMax.js这一个文件即可使用TweenMax的所有功能。 如果要争取更小的库文件大小,可以使用TweenLite.js(8K)并自由组合其他插件\n1 2 3 4  \u003c!-- 只能用TweenLite --\u003e \u003cscript src=\"js/TweenLite.min.js\"\u003e \u003c/script\u003e \u003cscript src=\"js/plugins/CSSPlugin.min.js\"\u003e \u003c/script\u003e \u003cscript src=\"js/easing/EasePack.min.js\"\u003e \u003c/script\u003e   准备好要执行TweenMax动画的元素 先创建需要进行TweenMax动画的元素\n1  \u003cdiv id=\"obj\"\u003ebox1\u003c/div\u003e   TweenMax不仅仅可以对html元素进行动画，还可以补间任何Javascript物件的任何数字属性\n给该元素设置TweenMax动画 1 2 3  \u003cscript\u003e TweenMax.to(\"#obj\", 0.5, {left:200}); \u003c/script\u003e   TweenMax的第一个参数是你想进行动画的目标，第二是动画持续时间(默认是秒)，最后是要被动画的一个或多个属性。 上面例子的作用是，为一个id为\"obj\"的元素设置动画，在0.5秒的过程中使其移动到left:200px位置处。 由于这是一个to()方法，所以不论开始时是多少，left属性都会变为200。\nEXAMPLE:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003ctitle\u003etitle\u003c/title\u003e \u003cstyle\u003e #obj{ position:relative; width:50px; line-height:50px; background:#23ac0e; border-radius:5px; color:#fff; text-align:center; } \u003c/style\u003e \u003c/head\u003e \u003cbody\u003e \u003cdiv id=\"obj\"\u003ebox1\u003c/div\u003e \u003c/body\u003e \u003cscript src=\"TweenMax.min.js\"\u003e\u003c/script\u003e \u003cscript \u003e TweenMax.to(\"#obj\", 0.5, {left:200}); \u003c/script\u003e \u003c/html\u003e   left和top属性动画需要position:reletive的支持且为固定值，因此有时候使用x或y代替(使用的是CSS3的translate属性动画)更为简便\n1  TweenMax.to(\"#obj\", 0.5, {x:200});//在原有位置向右移动200px   如果你想同时增加其宽度属性\"width\"为200时，可以这样做：\n1  TweenMax.to(\"#obj\", 0.5, {x:200, width:200});   水滴效果完整代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99  \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003cstyle\u003e body, html { height: 100%; } body { margin: 0; width: 100%; display: flex; justify-content: center; align-items: center; } .btn { width: 100px; height: 100px; border-radius: 50%; background: #208cf1; filter: url(\"#shadowed-goo\"); position: relative; cursor: pointer; display: flex; justify-content: center; align-items: center; } .ball { display: inline-block; width: 100%; height: 100%; background: #208cf1; border-radius: 50%; position: absolute; left: 0; top: 0; opacity: 1; } .text { position: relative; z-index: 5; color: white; font-weight: bold; } \u003c/style\u003e \u003c/head\u003e \u003cbody\u003e \u003cdiv class=\"btn\"\u003e \u003cspan class=\"ball\"\u003e\u003c/span\u003e \u003cspan class=\"ball\"\u003e\u003c/span\u003e \u003cspan class=\"ball\"\u003e\u003c/span\u003e \u003cspan class=\"text\"\u003eHOVER\u003c/span\u003e \u003c/div\u003e \u003csvg style=\"width: 0; height: 0;\"\u003e \u003cdefs\u003e \u003cfilter id=\"shadowed-goo\"\u003e \u003cfeGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"10\" /\u003e \u003cfeColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 18 -7\" result=\"goo\" /\u003e \u003cfeGaussianBlur in=\"goo\" stdDeviation=\"3\" result=\"shadow\" /\u003e \u003cfeColorMatrix in=\"shadow\" mode=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 -0.2\" result=\"shadow\" /\u003e \u003cfeOffset in=\"shadow\" dx=\"1\" dy=\"1\" result=\"shadow\" /\u003e \u003cfeBlend in2=\"shadow\" in=\"goo\" result=\"goo\" /\u003e \u003cfeBlend in2=\"goo\" in=\"SourceGraphic\" result=\"mix\" /\u003e \u003c/filter\u003e \u003c/defs\u003e \u003c/svg\u003e \u003c/body\u003e \u003cscript src=\"TweenMax.min.js\"\u003e\u003c/script\u003e \u003cscript\u003e function initBt4() { var bt = document.querySelector('.btn') var blob = document.querySelectorAll('.ball'); var filter = document.querySelector('#shadowed-goo'); bt.addEventListener(\"mousemove\", function (e) { var x = (e.pageX - bt.offsetLeft - bt.offsetWidth / 2) * 0.3; var y = (e.pageY - bt.offsetTop - bt.offsetHeight / 2) * 0.3; TweenLite.to(blob[0], 4.2, { x: x, y: y, ease: Elastic.easeOut.config(1, 0.1) }); TweenLite.to(blob[1], 2.8, { x: x, y: -y, ease: Elastic.easeOut.config(1, 0.1) }); TweenLite.to(blob[2], 2.8, { x: -x, y: -y, ease: Elastic.easeOut.config(1, 0.1) }); }) } initBt4() \u003c/script\u003e \u003c/html\u003e   ","description":"","tags":["HTML","CSS"],"title":"水滴按钮效果（前端）","uri":"/posts/%E6%B0%B4%E6%BB%B4%E6%8C%89%E9%92%AE%E6%95%88%E6%9E%9Chtml+css/"},{"categories":["TECH","前端"],"content":"开发环境 win10(64位) + Google Chorme + sublime text3 + xampp + Navicat\n文件夹的设置 目的：显示文件的后缀 任意打开一个文件夹，点击 查看 ，勾选上 文件扩展名 。 安装编辑器 sublime text3 sublime text3 下载地址 安装过程就不用说了，直接下一步就好了。 安装 xampp XAMPP 官方下载地址 下载好之后点击 .exe 后缀文件，进行安装\n 注意：文件路径不要使用中文\n 安装好了之后直接打开xampp,这时候点击 Apache 和 MySql 的Start按钮，如果 Apache 和 MySql 都变成 ..绿底.. 并且拥有 ..端口号.. ，那么就代表 xampp 打开成功了！ 如何验证成功了呢？ 我们在浏览器地址栏中打开 127.0.0.1 ，这时我们就能看到如下的页面  关于127.0.0.1：一个特殊的IP地址，在百度中直接搜索 那么这个地址代表的是本地哪里的文件呢？ 在你的xampp安装路径下有个 htdocs 文件夹，下面会有一个 index.html 文件，127.0.0.1指的就是这个目录下的这个文件，可以自己创建一个 index.html 文件替换掉它再刷新网页试试效果 如果没有 index.html 文件，那么浏览器将会显示当前文件夹包含的 ..所有文件列表..\n下载php手册 浏览器地址栏输入 https://www.php.net/ 在里面找到中文版本的下载\n其他php手册：这里是w3school在线php手册\n安装navicat Navicat for MySQL 官方下载地址 下载安装好了之后点击连接  用户名和密码均为 root\n 到此为止，php的开发环境就已经安装好了。\n本文参考地址\n","description":"","tags":["Php","Xampp"],"title":"PHP学习开发环境的安装","uri":"/posts/php%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E5%AE%89%E8%A3%85/"},{"categories":["TECH","Hugo"],"content":"字体排版  说明：任何一项留空，浏览器都会回退到主体字体 fontFamilyBody，故没必要全部设置。此外，如果你的品牌栏用的 SVG，则可留空品牌栏字体。\n 品牌栏 1  fontFamilySiteBrand = \"'Liu Jian Mao Cao', cursive\"   菜单栏 1  fontFamilyMenu = \"\"   各类标题  文章标题、文章副标题、列表标题、列表的年份和月份标题、相关文章标题、文章上下篇标题\n 1 2  #fontFamilyTitle = \"Comfortaa, sans-serif\" fontFamilyTitle = \"'Cinzel Decorative', 'Noto Serif SC', serif\"   目录、分节标题  分节标题、目录标题\n 1 2  #fontFamilyHeadings = \"Comfortaa, sans-serif\" fontFamilyHeadings = \"'Cinzel Decorative', 'Noto Serif SC', serif\"   代码、上标  代码、上标、文章元信息、文章更新徽章、文章的 Git 版本信息、极简页脚\n 1 2  #fontFamilyCode = \"'Source Code Pro', monospace\" fontFamilyCode = \"'Source Code Pro', 'Noto Serif SC', monospace\"   引用 1  fontFamilyQuote = \"'EB Garamond', 'STKaiti', 'KaiTi', 'SimKai', 'Noto Serif SC', serif\"   文章目录 1  fontFamilyTOC = \"\"   说明文字 1  fontFamilyCaption = \"\"   页脚 1  fontFamilyFooter = \"'Ma Shan Zheng', cursive\"   主体 1  fontFamilyBody = \"'EB Garamond', 'Noto Serif SC', serif\"   网络字体链接 1  fontsLink = \"https://fonts.googleapis.com/css?family=EB+Garamond:400,400i,700,700i|Noto+Serif+SC:400,700|Source+Code+Pro:400,400i,700,700i|Cinzel+Decorative:700|Ma+Shan+Zheng:|Liu+Jian+Mao+Cao:\u0026display=swap\u0026subset=chinese-simplified\"   具体设置方式 进入https://fonts.google.com/ 之后，搜索或选择喜欢的字体库 点击加号，在屏幕右下角的弹框的CUSTOMIZE标签中进一步选择 点击EMBED标签 这里有生成的字体链接：\nhttps://fonts.googleapis.com/css?family=Noto+Serif+SC:300,400,500,700\u0026display=swap\u0026subset=chinese-simplified以及设置字体时填入的参数 'Noto Serif SC', serif\n例如，假设你的字体链接为fontsLink = \"https://fonts.googleapis.com/css?family=EB+Garamond:400,400i,700,700i|Noto+Serif+SC:400,700|Source+Code+Pro:400,400i,700,700i|Cinzel+Decorative:700\u0026display=swap\u0026subset=chinese-simplified\"\n现在你想给页脚fontFamilyFooter配置另一种字体，比如ZCOOL XiaoWei，去网站选择之后生成的信息如下： 现在你需要在原来的字体链接\u0026display=swap\u0026subset=chinese-simplified的前面加上|ZCOOL+XiaoWei:，然后设置fontFamilyFooter = \"'ZCOOL XiaoWei', serif\"，在本地预览一下，应该成功了！(注意观察上图生成的代码和你添加到配置文件中的区别)\n 说明：要想读者一定体验到你设置的字体，最好采用网络字体。MemE 主题目前仅支持Google Fonts 的链接，请前往 https://fonts.google.com/ 获取。此项留空，则不会采用网络字体。\n 字号（单位：px） 1  fontSize = 16   行间距 1  lineHeight = 2    说明：只会应用到文章的段落和目录\n 段首缩排 1 2 3 4 5  # 是否开启 enableParagraphIndent = true # 分段样式（全局设置） paragraphStyle = \"margin\"    说明：段间距式（margin）或段首缩排（indent）文章的 Front Matter 中 indent的优先级高于此处\n 两端对齐 1 2  # 是否开启（全局设置） enableJustify = true    说明：文章的 Front Matter 中的 align的优先级高于此处\n 首字下沉 1 2  # 是否开启（全局设置） enableDropCap = true    说明：文章的 Front Matter 中的 dropCap的优先级高于此处\n 1 2  # 是否在每一分隔线之后首字下沉（全局设置） enableDropCapAfterHr = false    说明：文章的 Front Matter 中的 dropCapAfterHr的优先级高于此处\n 1 2  # 是否删除首字下沉前的分隔线（全局设置） deleteHrBeforeDropCap = false    说明：文章的 Front Matter 中的 deleteHrBeforeDropCap的优先级高于此处\n 大型小写（英文） 1 2  # 是否开启（全局设置） enableSmallCaps = false    说明：只会应用到分节标题和目录标题文章的 Front Matter 中的 smallCaps的优先级高于此处\n 着重号  说明：MemE 主题自创的新 Markdown, 语法为在内容左右两边分别加上两个半角状态下的点..\n 1 2  # 是否开启 enableEmphasisPoint = true   文章版权 1 2 3 4  #是否开启 enablePostCopyright = true displayPostCopyright = false    说明：文章的 Front Matter 中的 displayCopyright的优先级高于此处\n 文章更新徽章 1 2 3 4 5  # 是否开启 enablePostUpdatedBadge = true # 是否显示（全局设置） displayUpdatedBadge = true    说明：文章的 Front Matter 中的 badge的优先级高于此处\n 1 2 3 4  # 是否添加 `title` enableBadgeTitle = true # `title` 的前缀 badgeTitlePrefix = \"Updated @ \"   相关文章 1 2 3 4 5  # 是否开启 enableRelatedPosts = true # 是否显示（全局设置） displayRelatedPosts = true    说明：文章的 Front Matter 中的 related的优先级高于此处\n 1 2 3 4  # 相关文章数 relatedPostsNumber = 5 # 相关文章标题右边的图标 relatedPostsIcon = \"plus-circle\"   文章标签 1 2 3 4  # 是否开启 enablePostTags = true # 标签图标 postTagsIcon = \"tag\"   文章上下篇  说明：在 MemE 主题中，文章上下篇是从空间位置角度设计的，而不是像大多数其它主题所做的那样——从时间角度设计。因此，如果你点击左边的上篇，跳转的是一篇更新的文章；如果你点击右边的下篇，跳转的是一篇更旧的文章。\n 1 2 3 4 5  # 是否开启 enablePostNav = true # 是否仅限于相同的文章分区 postNavInSection = false   页脚 1 2  # 是否开启 enableFooter = true    说明：「诗意人生」和「视频片段」首页布局的首页没有页脚\n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  # 是否显示版权符号（©） displayCopyrightSymbol = true # 是否显示站点的创建年份 displaySiteCreatedYear = true # Leave it empty(\"\") if you don’t wantthe icon # 年份与作者之间的图标 iconBetweenYearAndAuthor = \"heart\" iconColor = \"#e93448\" # 是否开启图标的跳动效果 iconAnimation = true # 是否显示 Hugo 和 MemE 的链接 displayPoweredBy = true # 是否显示站点的版权信息 displaySiteCopyright = true # 自定义页脚（支持 Markdown） customFooter = \"\"   极简页脚 1 2 3 4 5  # 是否开启 enableMinimalFooter = true # 是否开启关于页面的极简页脚 enableAboutPageMinimalFooter = true   返回顶部按钮 1 2 3 4 5 6  # 是否开启 enableBackToTop = true # 是否在首页显示 displayBackToTopInHome = true # 按钮图标 backToTopIcon = \"arrow-up\"   多语言 1 2 3 4 5 6 7 8  # 是否开启多语言按钮 enableLangToggle = true # 是否在首页隐藏多语言按钮 hideLangToggleInHome = false # 是否自动隐藏多语言按钮 autoHideLangToggle = false    说明：即仅当该文章有相应的翻译版本时才显示按钮\n back-to-top样式 在文件back-to-top.scss中：\n 文件原始位置：\\themes\\meme\\assets\\scss\\_common\\back-to-top.scss\n文件位置更新为：\\themes\\meme\\assets\\scss\\components\\back-to-top.scss\n 1 2 3 4 5 6 7 8  .back-to-top { font-size: 120%; color: var(--color-contrast-medium); position: fixed; bottom: 1.2em; right: 1.2em; z-index: 1; }   归档、分类及标签页样式 归档样式代码： 在文件list.scss中：\n 文件原始位置：\\themes\\meme\\assets\\scss\\_common\\list.scss\n文件位置更新为：\\themes\\meme\\assets\\scss\\layout\\list.scss\n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  //归档页总标题（posts） .list-title { text-align: center; } //归档页文章列表 .list { ul { list-style: none; padding: 0; } } //文章列表 .list-item { line-height: 2; position: relative; transition: border $duration; border-bottom: 1px dashed var(--color-contrast-low); margin-top: 1em; padding-bottom: 0.5em; display: flex; align-items: baseline; \u0026:hover { border-bottom-color: var(--color-primary); ::before { background: var(--color-primary); } } ::before { content: \" \"; position: absolute; left: 0.618em; top: 0.618em; width: $fontSize / 3; height: $fontSize / 3; background: var(--color-contrast-low); border-radius: 50%; border: 1px solid var(--color-bg); transition: background $duration; font-size: $fontSize; } } //列表中文章标题 .list-item-title { margin: 0 0.618em 0 2em; font-size: 1.1em; line-height: 1.2; } //列表中时间 .list-item-time { margin: 0 0.618em 0 2em; color: var(--color-contrast-medium); line-height: 1.2; } //年份 .list-year { display: flex; justify-content: space-between; align-items: baseline; }   分类样式代码：  文件位置：\\themes\\meme\\assets\\scss\\pages\\_tree-categories.scss\n 1 2 3 4 5 6 7 8 9 10  .category-item { color: #02a1ff; font-size: 1.2em; \u0026:hover { color: blueviolet; } } .category-count { color: var(--color-contrast-medium); }   标签样式代码：  文件位置：\\themes\\meme\\assets\\scss\\pages\\_tag-cloud.scss\n 1 2 3 4 5 6 7  .tag-cloud { text-align: center; } .tag-cloud-item { margin: ($fontSize * 0.5); display: inline-block; }   多媒体 audio标签 1 2 3 4 5  \u003c!--通过\u003caudio\u003e标签插入--\u003e \u003caudio controls height=\"100\" width=\"100\" style=\"clear:both;display:block;margin:auto\"\u003e \u003csource src=\"https://zccon.oss-cn-beijing.aliyuncs.com/Hugo/audios/Lame.mp3\" type=\"audio/mpeg\"\u003e \u003cembed height=\"50\" width=\"100\" src=\"https://zccon.oss-cn-beijing.aliyuncs.com/Hugo/audios/Lame.mp3\"\u003e \u003c/audio\u003e    DEMO:  video标签 1 2 3  \u003cvideo poster=\"https://zccon.oss-cn-beijing.aliyuncs.com/images/%E5%A4%A9%E6%89%8D%E5%B0%91%E5%A5%B3.png\" controls\u003e \u003csource src=\"https://zccon.oss-cn-beijing.aliyuncs.com/Hugo/videos/GeniusGirl.mp4\"\u003e \u003c/video\u003e    DEMO:  网易云外链方式添加音乐 在网页版网易云音乐中搜索需要的歌（不支持 ..无版权.. 或 ..会员.. 歌曲）\n点击生成外链播放器\n将生成的代码直接复制到文章中即可：（width和height自己调整）\n DEMO: 1  \u003ciframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=100% height=86 src=\"//music.163.com/outchain/player?type=2\u0026id=167732\u0026auto=0\u0026height=66\"\u003e\u003c/iframe\u003e   效果：\n 自定义 诗歌引用格式 内容来自这里 新建 quote-center.html 文件，其内容如下：\n 文件位置：blog\\layouts\\shortcodes文件夹下\n 1 2 3 4 5 6 7 8  \u003cblockquote class=\"quote-center\"\u003e {{- $content := .Inner | markdownify -}} {{- if not (strings.HasPrefix $content \"\u003cp\u003e\") }} {{ printf `\u003cp\u003e%s\u003c/p\u003e` $content | safeHTML }} {{- else }} {{- $content }} {{- end -}} \u003c/blockquote\u003e   接着在文件 custom.scss 中添加样式：\n 文件位置：\\themes\\meme\\assets\\scss\\custom\\_custom.scss\n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  blockquote.quote-center { position: relative; border-left: none; padding-left: 0; border-top: 1px solid var(--color-contrast-lower); border-bottom: 1px solid var(--color-contrast-lower); p{ text-align: center !important; margin-top: 1.5em; margin-bottom: 1.5em; } \u0026::before { position: absolute; left: 0; content: '“'; color: var(--color-contrast-low); font-size: 3em; font-weight: bold; margin-top: -0.42em; } \u0026::after { position: absolute; right: 0; content: '”'; color: var(--color-contrast-low); font-size: 3em; font-weight: bold; margin-top: -0.7em; } }    DEMO: 语法：\n{{\u003c quote-center \u003e}} 伟大的小丑帕格里亚齐来了\u003cbr/\u003e去看他的表演吧\u003cbr/\u003e他能让你振作起来 {{\u003c /quote-center \u003e}} 效果： 伟大的小丑帕格里亚齐来了去看他的表演吧他能让你振作起来\n 卡片风格 在文件custom.scss中加入以下样式：\n 文件原始位置：\\themes\\meme\\assets\\scss\\_custom\\custom.scss\n文件更新位置：\\themes\\meme\\assets\\scss\\custom\\_custom.scss\n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  .mytag{ position: relative; left: 0; right: 0; width: 100%; height: 100%; line-height: 2; margin: auto; border-radius: 5px; background: rgba(255, 255, 255, .2); box-shadow: 3px 3px 6px 3px rgba(0, 0, 0, .5); overflow: hidden; } .mytag::before{ content: ''; position: relative; left: 0; right: 0; filter: blur(20px); z-index: -1; margin: -30px; }    DEMO: 语法：\n1 2 3 4 5 6  \u003cdiv class=\"mytag\"\u003e \u003cp style=\"margin:25px\"\u003e \u003cb\u003e\"少年贪玩，青年迷恋爱情，壮年汲汲于成名成家，暮年自安于自欺欺人。人寿几何，顽铁能炼成的精金，能有多少？但不同程度的锻炼，必有不同程度的成绩；不同程度的纵欲放肆，必积下不同程度的顽劣。\"\u003cbr /\u003e上苍不会让所有幸福集中到某个人身上，得到爱情未必拥有金钱；拥有金钱未必得到快乐；得到快乐未必拥有健康；拥有健康未必一切都会如愿以偿。保持知足常乐的心态才是淬炼心智、净化心灵的最佳途径。一切快乐的享受都属于精神，这种快乐把忍受变为享受，是精神对于物质的胜利，这便是人生哲学。\"\u003c/b\u003e \u003c/p\u003e \u003cdiv style=\"text-align:right;margin:15px\" \u003e\u003cfooter\u003e——\u003ccite\u003e杨绛\u003c/cite\u003e\u003c/footer\u003e\u003c/div\u003e\t\u003c/div\u003e   效果：\n\"少年贪玩，青年迷恋爱情，壮年汲汲于成名成家，暮年自安于自欺欺人。人寿几何，顽铁能炼成的精金，能有多少？但不同程度的锻炼，必有不同程度的成绩；不同程度的纵欲放肆，必积下不同程度的顽劣。\"\n上苍不会让所有幸福集中到某个人身上，得到爱情未必拥有金钱；拥有金钱未必得到快乐；得到快乐未必拥有健康；拥有健康未必一切都会如愿以偿。保持知足常乐的心态才是淬炼心智、净化心灵的最佳途径。一切快乐的享受都属于精神，这种快乐把忍受变为享受，是精神对于物质的胜利，这便是人生哲学。\" ——杨绛\t 文字渐变色 在文件custom.scss中添加..渐变..样式：\n 文件位置：\\themes\\meme\\assets\\scss\\\\_custom\\custom.scss\n文件位置更新为：\\themes\\meme\\assets\\scss\\custom\\_custom.scss\n 1 2 3 4 5  .colorfulfont { background: linear-gradient(to right, red,#45ed63); -webkit-background-clip: text; color: transparent; }    DEMO: 语法：\n1 2 3  \u003cfont class = \"colorfulfont\"\u003e 伟大的小丑帕格里亚齐来了\u003cbr/\u003e去看他的表演吧\u003cbr/\u003e他能让你振作起来 \u003c/font\u003e   效果：\n伟大的小丑帕格里亚齐来了去看他的表演吧他能让你振作起来  添加博客已运行时间 参考网址 在文件custom.js中添加自定义的js代码\n 文件位置：\\themes\\meme\\assets\\js\\custom.js\n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  //计算博客运行时间（2020.06.03添加） function siteTime(){ window.setTimeout(\"siteTime()\", 1000); var seconds = 1000 var minutes = seconds * 60 var hours = minutes * 60 var days = hours * 24 var years = days * 365 var today = new Date() var todayYear = today.getFullYear() var todayMonth = today.getMonth() + 1 var todayDate = today.getDate() var todayHour = today.getHours() var todayMinute = today.getMinutes() var todaySecond = today.getSeconds() var t1 = Date.UTC(2019, 11, 26, 19, 06, 00) var t2 = Date.UTC(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond) var diff = t2-t1 var diffYears = Math.floor(diff/years) var diffDays = Math.floor((diff/days)-diffYears*365) var diffHours = Math.floor((diff-(diffYears*365+diffDays)*days)/hours) var diffMinutes = Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours)/minutes) var diffSeconds = Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours-diffMinutes*minutes)/seconds) if(diffYears==0){ document.getElementById(\"sitetime\").innerHTML=\" \"+diffDays+\" 天 \"+diffHours+\" 小时 \"+diffMinutes+\" 分钟 \"+diffSeconds+\" 秒\" }else{ document.getElementById(\"sitetime\").innerHTML=\" \"+diffYears+\" 年 \"+diffDays+\" 天 \"+diffHours+\" 小时 \"+diffMinutes+\" 分钟 \"+diffSeconds+\" 秒\" } } siteTime()   其中var t1 = Date.UTC(2019, 11, 26, 19, 06, 00)设置为需要计算的起始日期，如时间是：2020年01月01号00点00分00秒则设置为：\n1  var t1 = Date.UTC(2020,01,01,00,00,00)    DEMO: 1  运行时间\u003cspan id=\"sitetime\" style=\"color:#fb7312\"\u003e\u003c/span\u003e   运行时间\n添加hugo-notice 内容来自这里  新建文件notice.html,并输入以下内容。   文件位置：blog\\layouts\\shortcodes文件夹下\n 1 2 3 4 5 6 7 8 9 10 11  {{- $noticeType := .Get 0 -}} {{- $raw := (markdownify .Inner | chomp) -}} {{- $block := findRE \"(?is)^\u003c(?:address|article|aside|blockquote|canvas|dd|div|dl|dt|fieldset|figcaption|figure|footer|form|h(?:1|2|3|4|5|6)|header|hgroup|hr|li|main|nav|noscript|ol|output|p|pre|section|table|tfoot|ul|video)\\\\b\" $raw 1 -}} {{ $icon := (replace (index $.Site.Data.SVG $noticeType) \"icon\" \"icon notice-icon\") }} \u003cdiv class=\"notice {{ $noticeType }}\" {{ if len .Params | eq 2 }} id=\"{{ .Get 1 }}\" {{ end }}\u003e \u003cdiv class=\"notice-title\"\u003e{{ $icon | safeHTML }}\u003c/div\u003e {{- if or $block (not $raw) }}{{ $raw }}{{ else }}\u003cp\u003e{{ $raw }}\u003c/p \u003e{{ end -}} \u003c/div\u003e   在文件custom.scss中添加样式：   文件位置：\\themes\\meme\\assets\\scss\\custom\\_custom.scss\n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77  .notice { position:relative; padding: 1em 1em 1em 2.5em; margin-bottom: 1em; border-radius: 4px; p:last-child { margin-bottom: 0; } .notice-title { position: absolute; left: 0.8em; .notice-icon { width: 1.2em; height: 1.2em; } } \u0026.notice-warning { background: hsla(0, 65%, 65%, 0.15); border-left: 5px solid hsl(0, 65%, 65%); .notice-title { color: hsl(0, 65%, 65%); } } \u0026.notice-info { background: hsla(30, 80%, 70%, 0.15); border-left: 5px solid hsl(30, 80%, 70%); .notice-title { color: hsl(30, 80%, 70%); } } \u0026.notice-note { background: hsla(200, 65%, 65%, 0.15); border-left: 5px solid hsl(200, 65%, 65%); .notice-title { color: hsl(200, 65%, 65%); } } \u0026.notice-tip { background: hsla(140, 65%, 65%, 0.15); border-left: 5px solid hsl(140, 65%, 65%); .notice-title { color: hsl(140, 65%, 65%); } } } [data-theme=\"dark\"] .notice { \u0026.notice-warning { background: hsla(0, 25%, 35%, 0.15); border-left: 5px solid hsl(0, 25%, 35%); .notice-title { color: hsl(0, 25%, 35%); } } \u0026.notice-info { background: hsla(30, 25%, 35%, 0.15); border-left: 5px solid hsl(30, 25%, 35%); .notice-title { color: hsl(30, 25%, 35%); } } \u0026.notice-note { background: hsla(200, 25%, 35%, 0.15); border-left: 5px solid hsl(200, 25%, 35%); .notice-title { color: hsl(200, 25%, 35%); } } \u0026.notice-tip { background: hsla(140, 25%, 35%, 0.15); border-left: 5px solid hsl(140, 25%, 35%); .notice-title { color: hsl(140, 25%, 35%); } } }   在SVG.toml文件中插入图标   文件位置：`\\themes\\meme\\data\\SVG.toml\n 1 2 3 4 5 6  # Notice Icon notice-warning = '\u003csvg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" viewBox=\"0 0 576 512\"\u003e\u003cpath d=\"M570 440c18 32-5 72-42 72H48c-37 0-60-40-42-72L246 24c19-32 65-32 84 0l240 416zm-282-86a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z\"/\u003e\u003c/svg\u003e' notice-info = '\u003csvg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" viewBox=\"0 0 512 512\"\u003e\u003cpath d=\"M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z\"/\u003e\u003c/svg\u003e' notice-note = '\u003csvg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" viewBox=\"0 0 512 512\"\u003e\u003cpath d=\"M504 256a248 248 0 11-496 0 248 248 0 01496 0zm-248 50a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z\"/\u003e\u003c/svg\u003e' notice-tip = '\u003csvg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" viewBox=\"0 0 512 512\"\u003e\u003cpath d=\"M504 256a248 248 0 11-496 0 248 248 0 01496 0zM227 387l184-184c7-6 7-16 0-22l-22-23c-7-6-17-6-23 0L216 308l-70-70c-6-6-16-6-23 0l-22 23c-7 6-7 16 0 22l104 104c6 7 16 7 22 0z\"/\u003e\u003c/svg\u003e'    DEMO: {{\u003cnotice notice-warning\u003e}} This is warning {{\u003c/notice\u003e}} \rThis is warning {{\u003cnotice notice-note\u003e}} This is note {{\u003c/notice\u003e}} \rThis is note {{\u003cnotice notice-info\u003e}} This is info {{\u003c/notice\u003e}} \rThis is info {{\u003cnotice notice-tip\u003e}} This is tip {{\u003c/notice\u003e}} \rThis is tip ","description":"","tags":["MemE","Hugo"],"title":"MemE主题优化（二）","uri":"/posts/meme%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E4%BA%8C/"},{"categories":["TECH","Hugo"],"content":"前言 折腾了两天，总算是把这个博客给搭建起来了😉😉!\n在写这篇文章之前，让我先啰嗦一下，毕竟认真搞了这么久，总有些话想说，想直接看..正文..的同学就..跳过..这段直接到第一章节吧！\n首先要感谢👏几个博主，第一次看到这个 ..博客主题.. MemE 是从 reuixiy 博客上看到的。第一眼就觉得这个主题特别干净，也就激起了我又一次搭建博客的兴趣（之前我其实就搭建过一个博客，当时是用hexo搭建的，现在博客还在用，不过由于速度确实不太行，就很少在上面写东西了）。说实话，我感觉 reuixiy 博主讲得实在太..详细..了，所以感觉自己只是在..照葫芦画瓢..🙃🙃🙃 。\n搭建博客的过程很简单，一般都不会有什么问题，所以这里我就写写关于MemE主题的各个细节的配置问题: ..一来..是自己想要更改博客主题样式的时候知道去哪个地方改？怎么改？🖊️ ..二来..可以提供给需要的朋友一些参考，让更多的人加入这个主题中来！❤️\n虽然之前有看过 reuixiy 博主的详细 站点配置文件 ，不过都是英文的，看得实在有点累（我的英文太水了😐）。虽然基本上都是..见名知义..的，可我觉得还是一份中文的文档📄比较适合我。\n在更改各个配置的时候我所参考的大部分内容是来自 Guanqr 博主提交到github中的config.toml文件，里面所有的注释都是中文的，对我来说简直太爽了😁😁😁！！！。然后有一些博客的写作格式也是从该博主的 commit 中找到的，自己也尝试着动手改改看，效果还不错！\n所以，这里就先谢谢这两位博主了🎉🎉🎉，当然中途出现了一些问题都是从网上找到方法解决的，所以也要感谢那么多给我提供过帮助的博主们！！！🎉🎉🎉\n好了，不多说了，步入正题，首先给大家看看我的..博客结构目录..：\n博客目录结构 blog │ ├── archetypes ├── content ├── data ├── layouts ├── public ├── resources ├── static\t├── themes └── config.toml 然后我们按照config.toml文件的大致内容依次梳理(会有部分内容与原文上下位置..不一致..)，其实大部分设置只需要..更改参数..就可以了，这里我就只把对应的..关键字..给出来，你们去自己的config.toml中查找关键字然后自己..更改参数..试试。这里附上我的config.toml文件。\n每一分页文章数 1  paginate = 6   代码高亮 1 2 3 4  pygmentsCodefences = true pygmentsUseClasses = true pygmentsCodefencesGuessSyntax = true pygmentsOptions = \"linenos=table\"   作者信息 1 2 3 4 5 6 7 8 9 10 11 12 13  [author] # 名字 name = \"name\" # 邮箱 email = \"zccon1996@163.com\" # 座右铭或简介 motto = \"motto\" # 头像 avatar = \"/icons/apple-touch-icon.png\" # 网站（默认值：baseURL） website = \"https://ztygcs.github.io\" # 推特 #twitter = \"\"   菜单栏 菜单开关项  enableMenu:是否开启菜单栏 displayMenuInHome： 是否在首页显示 activeInSection：是否按文章分区高亮当前菜单项   说明：如果activeInSection开启(设置为true)，那么当某一文章的分区名是某一菜单项中的 url 时，该文章页面中的该菜单项也会被高亮\n 1 2 3  enableMenu = true displayMenuInHome = true activeInSection = true   菜单配置项 MemE 主题支持以下四种菜单：\n1 2 3 4  # 1. main 顶栏下方的菜单栏 # 2. home 首页的底部链接（适用于「诗意人生」和「视频片段」布局） # 3. socials 社交栏（关于页面的极简页脚） # 4. links 链接栏（关于页面的极简页脚）   菜单内的配置说明如下：\n1 2 3 4 5 6 7  # url 链接地址 # name 文本（留空（\"\"）则无） # weight 位置 # pre 内链（internal）或外链（external） # post 图标（留空（\"\"）则无） # identifier 图标的 Class 名（菜单栏无效）   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  [menu] ## Menu bar [[menu.main]] url = \"/\" name = \"首页\" weight = 1 pre = \"internal\" post = \"home\" [[menu.main]] url = \"/posts/\" name = \"归档\" weight = 2 pre = \"internal\" post = \"archive\" [[menu.main]] url = \"/categories/\" name = \"分类\" weight = 3 pre = \"internal\" post = \"th\" [[menu.main]] url = \"/tags/\" name = \"标签\" weight = 4 pre = \"internal\" post = \"tags\" [[menu.main]] url = \"/about/\" name = \"关于\" weight = 5 pre = \"internal\" post = \"user-circle\"   上面代码效果： 顶栏 1 2 3 4 5  # 是否开启 enableHeader = true # 是否在首页显示 displayHeaderInHome = true   品牌栏（在顶栏内） 品牌栏内容  siteBrandSVG = true :显示SVG图片（请将你的 SVG 放到 SVG.toml 文件内，并配置以下项。单位：px） siteBrandSVGWidth:设置SVG..宽度.. siteBrandSVGHeight:设置SVG..高度..   （SVG图片..文件位置..：\\themes\\meme\\data\\SVG.toml）\n  siteBrandSVG = false :使用你的站点标题作为默认值，并以文字的形式显示（下方可配置字号和字色。字体到底部的字体部分配置。单位：em） siteBrandFontSize = 3 siteBrandFontColor = \"#fff\"  1 2 3 4 5 6 7 8  siteBrandSVG = false siteBrandSVGWidth = 250 siteBrandSVGHeight = 100 siteBrandSVGFill = \"#fff\" siteBrandFontSize = 3 siteBrandFontColor = \"#fff\"   品牌栏背景色   siteBrandBackgroundColor用来设置背景色（..hsl格式..）\n  siteBrandBackgroundImage用来设置背景图片\n  注意：背景色和背景图片只能..二选一..\n  1 2  #siteBrandBackgroundColor = \"hsl(240, 8%, 12%)\" siteBrandBackgroundImage = \"linear-gradient(90deg, #f79533 0, #f37055 15%, #ef4e7b 30%, #a166ab 44%, #5073b8 58%, #1098ad 72%, #07b39b 86%, #6dba82 100%)\"   首页布局 MemE 主题有以下四种首页布局：\n poetry ..诗意人生.. footage ..视频片段.. posts  ..文章摘要.. page  ..普通页面..  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  #这里设置为文章摘要 homeLayout = \"posts\" ## 「诗意人生」 # 诗句，支持 Markdown homePoetry = [] # 底部链接的内间距，单位：em homeLinksPadding = 1 ## 「视频片段」 homePoster = \"\" homeVideoWebm = \"\" homeVideoMp4 = \"\" homeLogo = \"\" homeLogoLink = \"\" homeTitle = \"\" homeMotto = \"\" homeDescription = \"\" homeKeywords = \"\" homeLinksDelimiter = \"\"   分类页面 分类方式 MemE 主题支持以下两种分类方式：\n sections ..分区.. categories  ..部类..   其中: 分区是基于站点的content目录下的文件夹和子文件夹； 部类是基于文章的Front Matter。 分类即树状分类，Hexo 是基于文章的 Front Matter，Hugo 则是基于文件系统的结构。由于设计理念的不同，导致了 Hexo与 Hugo 的这个差异，故在此设计这个选项，以对从 Hexo 过来的用户友好。但是请注意：Hugo 中无法完全实现基于 Front Matter的树状分类，故如需保留树状分类，建议适应Hugo 的设计理念——分区。\n categoryBy = \"categories\"  注意：如果你设置为 sections，请务必将此配置文件中的类别（taxonomies）中的 categories 删除，不然分类页面会失效。\n 1 2 3 4  # 类别 [taxonomies] category = \"categories\" tag = \"tags\"   分类设置  enableTree:是否开启树状布局 displayPosts:分类页面中是否显示文章标题 displayPostsCount:分类页面中是否显示每一分类下的文章数   注意：如果你设置 categoryBy 为 sections，则无法关闭树状布局\n 1 2 3  enableTree = true displayPosts = false displayPostsCount = true   文章分区范围 1 2 3 4 5  # 说明：分区的名字即站点的 content 目录下的文件夹的名字。 # mainSections = [\"posts\"] # 是否包括全文内容 includeContent = true    说明：如果includeContent为false，则只会包含文章的摘要。关于摘要，Hugo能按你设置的字数限制自动截取，你也可以在文章中通过 \u003c !--more-- \u003e(没有空格)手动控制，或者在文章的Front Matter中通summary 手动指定。其中，应用的优先级顺序：手动指定 \u003e 手动控制 \u003e 自动截取。还需要注意的是，在MemE主题自定义的 Atom 和 RSS 的模板中，有一个比手动指定更高的优先级————Front Matter 中的 description。\n 文章首页摘要字数限制 查找关键字summaryLength\n1  summaryLength = 150   标签页面  enableTagCloud:是否启用标签云 fontUnit:字号单位 largestFontSize:最大字号 smallestFontSize:最小字号  1 2 3 4  enableTagCloud = true fontUnit = \"em\" largestFontSize = 2.5 smallestFontSize = 1   归档列表页面  listWidth:宽度   说明：listWidth如果留空（\"\"），则用 42 作为默认值,单位：em\n  displayListTitle:是否显示列表标题 listDateFormat:日期的格式   注意：日期的格式请遵循格式 https://gohugo.io/functions/format/\n  listDatePosition:日期的位置(left或者right) groupByMonth:是否按月份分隔列表 chineseZodiac:是否开启十二生肖 i18nYear:是否翻译年份（仅对年份标题有效） i18nMonth:是否翻译月份（仅对月份标题有效）  1 2 3 4 5 6 7 8 9  listWidth = 36 displayListTitle = true #listDateFormat = \"January 2\" listDateFormat = \"01 月 02 日\" listDatePosition = \"right\" groupByMonth = false chineseZodiac = true i18nYear = true i18nMonth = true   深色模式 模式设置  enableDarkMode:是否开启 defaultTheme:默认模式   说明：defaultTheme分两种：light（浅色模式）或 dark（深色模式）\n  hideThemeToggle:是否隐藏模式切换开关 hideThemeToggleInHome:是否在首页隐藏模式切换开关  1 2 3 4  enableDarkMode = true defaultTheme = \"light\" hideThemeToggle = false hideThemeToggleInHome = false    说明：如果开启了深色模式，即使你隐藏了开关，你的读者依然可能以深色模式阅读你的博客，如果该读者的系统设置为深色模式的话。类似，如果你开启深色模式并将默认模式修改为它，即使你隐藏开关，你的读者依然可能以浅色模式模式阅读你的博客。\n 模式颜色  primaryColorLight:浅色模式的主色 primaryColorDark:深色模式的主色  1 2  primaryColorLight = \"220, 90%, 56%\" primaryColorDark = \"201, 65%, 62%\"    注意：只支持 ..HSL.. 颜色值\n 文章设置  duration:超链接的颜色变化持续时间（单位：秒） postWidth:文章的内容宽度 original:文章是否为原创（全局设置） displayPostDescription:文章描述是否显示   说明： 1.postWidth文章的内容宽度如果留空（\"\"），则用 42 作为默认值,单位：em 2.original会影响文章的作者信息和版权信息,文章的 Front Matter 中的 original的优先级高于此处\n 1 2 3 4  duration = 0.5 postWidth = 36 original = true displayPostDescription = true   文章元信息  enablePostMeta是否开启（全局设置）   说明：文章的 Front Matter 中的 meta的优先级高于此处\n  enablePostMetaInHome是否在首页开启   说明：仅对「文章摘要」和「普通页面」首页布局有效\n  postMetaDateFormat日期格式   注意：请遵循格式 https://gohugo.io/functions/format/\n  displayPublishedDate:是否显示发布时间 publishedDateIcon:发布时间的图标 displayModifiedDate:是否显示修改时间 modifiedDateIcon:修改时间的图标 displayExpiredDate:是否显示过期时间 expiredDateIcon:过期时间的图标 displayCategory:是否显示分类 categoryIcon:分类的图标 categoryDelimiter:分类之间的分隔符 displayWordCount:是否显示字数统计 wordCountIcon:字数统计的图标 displayReadingTime:是否显示阅读时长 readingTimeIcon:阅读时长的图标  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  enablePostMeta = true enablePostMetaInHome = true postMetaDateFormat = \"2006.1.2\" displayPublishedDate = true publishedDateIcon = \"calendar-alt\" displayModifiedDate = true modifiedDateIcon = \"calendar-check\" displayExpiredDate = true expiredDateIcon = \"calendar-times\" displayCategory = true categoryIcon = \"folder\" categoryDelimiter = \"/\" displayWordCount = true wordCountIcon = \"pencil-alt\" displayReadingTime = true readingTimeIcon = \"clock\"   文章目录  enableTOC:是否开启（全局设置）   说明：文章的 Front Matter 中的 toc的优先级高于此处\n  displayTOCTitle:是否显示目录标题 linkHeadingsToTOC:是否链接文章的分节标题到目录  1 2 3  enableTOC = true displayTOCTitle = true linkHeadingsToTOC = true   文章分节标题锚点  enableHeadingsAnchor:是否开启 headingsOpt:分节标题的级别范围   说明：正则格式，默认 1-6，即 1|2|3|4|5|6，即 h1 到 h6。\n  anchorSymbol:锚点符号   说明：锚点图标的优先级高于锚点符号,默认值：§\n  anchorIcon锚点图标   说明：留空（\"\"）则回退到锚点符号\n  enableAnchorLink:是否开启锚点链接 enableAnchorAutoHide:是否自动隐藏锚点  1 2 3 4 5 6  enableHeadingsAnchor = true headingsOpt = \"1-6\" anchorSymbol = \"#\" anchorIcon = \"link\" enableAnchorLink = true enableAnchorAutoHide = true   图片说明文字 1 2 3 4 5  # 是否开启 enableCaption = true # 说明文字的前缀 captionPrefix = \"◎ \"   图片外链  说明：仅在生产环境（production）下渲染只支持相对于网站根目录的绝对链接比如：/images/meme.jpg(~/blog/static/images/meme.jpg)\n 1 2 3 4 5 6 7 8  # 是否开启 enableImageHost = false # 图片外链地址 imageHostURL = \"https://example.com/\" # 是否将 HTML 的头部元数据中的图片链接也替换为外链 headAlso = false   视频外链  说明：仅在生产环境（production）下渲染只支持相对于站点根目录的绝对链接比如：/videos/meme.mp4\n 1 2 3 4 5  # 是否开启 enableVideoHost = false # 视频外链地址 videoHostURL = \"https://example.com/\"   脚注 1 2 3 4 5  # 是否用方括号包裹脚注的引用序号 squareBrackets = true # 替换脚注的返回链接中的文本为图标 footnoteReturnLinkIcon = \"angle-up\"    说明：如果不为空（\"\"），则会用图标替换footnoteReturnLinkContents\n 1 2  # 是否自行插入分隔线 insertHrBySelf = true    说明：如果是，则会将自动生成的分隔线删除。实际上，你自己添加的分隔线会被删除。如果你喜欢在 Markdown 中手动插入--- 以将文章的正文内容与脚注内容分隔开来，那么这项设置将会非常有用。\n ","description":"","tags":["MemE","Hugo"],"title":"MemE主题优化（一）","uri":"/posts/meme%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E4%B8%80/"},{"categories":["TECH"],"content":"Syntax guide Headers code:\n# This is an \u003ch1\u003e tag ## This is an \u003ch2\u003e tag ### This is an \u003ch3\u003e tag #### This is an \u003ch4\u003e tag ##### This is an \u003ch5\u003e tag ###### This is an \u003ch6\u003e tag Emphasis code:\n*This text will be italic* _This will also be italic_ **This text will be bold** __This will also be bold__ _You **can** combine them_ ~~This text will be strikethrough~~ demo:\n斜体：This text will be italic\n斜体：This will also be italic\n粗体：This text will be bold\n粗体：This will also be bold\n斜体+粗体：You can combine them\n删除线:This text will be strikethrough\nMeme主题新增：着重点: ..This.. ..will.. ..be.. ..emphasis..\nLists Unordered List code:\n- Item 1 - Item 2 - Item 2a - Item 2b demo:\n Item 1 Item 2  Item 2a Item 2b    Ordered List code:\n1. Item 1 1. Item 2 1. Item 3 1. Item 3a 1. Item 3b demo:\n Item 1 Item 2 Item 3  Item 3a Item 3b    Images code:\n![github_icon](/images/giuhub_icon.jpg) Format: ![Alt Text](url) demo:\nFormat: Links code:\nhttp://github.com - automatic! [GitHub](http://github.com) demo:\nhttp://github.com - automatic! GitHub\nBlockquote code:\nAs Kanye West said: \u003e We're living the future so \u003e the present is our past. demo:\nAs Kanye West said:\n We're living the future so the present is our past.\n Horizontal Rule code:\nThree or more... --- Hyphens --- Asterisks --- Underscores demo:\nThree or more...\n Hyphens\n Asterisks\n Underscores\nInline code code:\nI think you should use an `\u003caddr\u003e` element here instead. demo:\nI think you should use an \u003caddr\u003e element here instead.\nFenced code block You can create fenced code blocks by placing triple backticks ``` before and after the code block.\nSyntax Highlighting You can add an optional language identifier to enable syntax highlighting in your fenced code block.\nFor example, to syntax highlight Ruby code:\n1 2 3  require 'redcarpet' markdown = Redcarpet.new(\"Hello World!\") puts markdown.to_html   Code block class (MPE extended feature) You can set class for your code blocks.\nFor example, to add class1 class2 to a code block\n1 2 3  function add(x, y) { return x + y }   line-numbers You can enable line number for a code block by adding line-numbers class.\nFor example:\n1 2 3  function add(x, y) { return x + y; }   highlighting rows You can highlight rows by add highlight attribute:\n1    1    1    Task lists code:\n- [x] @mentions, #refs, [links](abc.com), **formatting**, and \u003cdel\u003etags\u003c/del\u003e supported - [x] list syntax required (any unordered or ordered list supported) - [x] this is a complete item - [ ] this is an incomplete item demo:\n @mentions, #refs, links, formatting, and tags supported list syntax required (any unordered or ordered list supported) this is a complete item this is an incomplete item  Tables You can create tables by assembling a list of words and dividing them with hyphens - (for the first row), and then separating each column with a pipe |:\ncode:\n|First Header | Second Header| |:-:|:-:| |Content from cell 1 | Content from cell 2| |Content in the first column | Content in the second column| demo:\n   First Header Second Header     Content from cell 1 Content from cell 2   Content in the first column Content in the second column    Extended syntax Table Need to enable enableExtendedTableSyntax in extension settings to get it work.\nEmoji \u0026 Font-Awesome This only works for markdown-it parser but not pandoc parser. Enabled by default. You can disable it from the package settings.\n😄 ⛺\nSuperscript code:\n30\u003csup\u003eth\u003c/sup\u003e demo:\n30th\nSubscript code:\nH\u003csub\u003e2\u003c/sub\u003eO demo:\nH2O\nFootnotes code:\nContent [^1] [^1]: Hi! This is a footnote demo:\nContent 1\n  Hi! This is a footnote ↩︎\n   ","description":"","tags":["Markdown"],"title":"Markdown语法基础","uri":"/posts/markdown%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/"},{"categories":["TECH","Hugo"],"content":"Hello HUGO!\n","description":"","tags":["Hugo"],"title":"Hello World","uri":"/posts/hello-world/"},{"categories":["TECH","Hexo"],"content":"本文是以Annie主题+Gitalk评论插件搭建的博客评论功能，其中涉及到Github仓库的创建和OAuth应用的申请。\n新建github仓库 首先登陆个人的github,点击\tNew repository创建..新的仓库..\n注册OAuth应用 Gitalk评论插件的授权机制依赖于OAuth Application，故使用Gitalk之前注册新应用。注册链接\n进入..注册应用界面..：\n   参数 说明 示例     Application name 应用名称(可任意填写) Gitalk   Homepage URL 仓库地址(这里填写步骤一中仓库Blog-Comments的地址) https://github.com/zccon/Blog-Comments   Application description 应用描述（可任意填写） Gitalk   Authorization callback URL 博客地址（这里填写个人博客主页地址） https://zccon.github.io/    获取Client ID和Client Secret 编辑主题配置文件 打开..主题目录..下的_config.yml文件，配置Gitalk评论插件的参数\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  comment:enable:truegitalk:enable:trueclientID:'1a2...'clientSecret:'3cf...'id:location.pathnamerepo:'Blog-Comments'owner:'zccon'admin:'zccon'distractionFreeMode:true#去除 more、index.html、?query=123等格式尾部 hrefTrimend:'#.*$,\\\\?.*$,index.html$'     参数 说明 示例     comment中的enable comment总开关，true：启用 true   gitalk中的enable gitalk开关，true：启用 true   clientID 步骤三中获取的Client ID '1a2...'   clientSecret 步骤三中获取的Client Secret '3cf...'   id 解决“未找到相关的issue进行评论，请联系@XXX初始化创建”问题 location.pathname   repo 步骤一中创建的仓库名（issues的容器） 'Blog-Comments'   owner 博客仓库的拥有者 'zccon'   admin 博客仓库的管理者 'zccon'   distractionFreeMode Gitalk插件的参数（无干扰模式，true启用） true   hrefTrimend Post url处理（删除url中的#、index等字符，缩短url） 默认不变     更多问题，请查看Gitalk评论插件的ISSUES\n ","description":"","tags":["Hexo","Annie","Gitalk"],"title":"Annie主题+Gitalk评论","uri":"/posts/annie%E4%B8%BB%E9%A2%98-gitalk%E8%AF%84%E8%AE%BA/"},{"categories":["TECH"],"content":"Smileys \u0026 People 😀😃😄😁😆😅😂🤣😊😇🙂🙃😉😌😍😘😗😙😚😋😛😝😜🤪🤨🧐🤓😎🤩😏😒😞😔😟😕🙁☹️😣😖😫😩😢😭😤😠😡🤬🤯😳😱😨😰😥😓🤗🤔🤭🤫🤥😶😐😑😬🙄😯😦😧😮😲😴🤤😪😵🤐🤢🤮🤧😷🤒🤕🤑🤠😈👿👹👺🤡💩👻💀☠️👽👾🤖🎃😺😸😹😻😼😽🙀😿😾🤲👐🙌👏🤝👍👎👊✊🤛🤜🤞✌️🤟🤘👌👈👉👆👇☝️✋🤚🖐️🖖👋🤙💪🖕✍️🙏💄💋👄👅👂👃👣👁️👀🧠🗣️👤👥👶👧🧒👦👩🧑👨👱‍♀️👱👱‍♂️🧔👵🧓👴👲👳👳‍♀️👳‍♂️🧕👮👮‍♀️👮‍♂️👷👷‍♀️👷‍♂️💂‍♀️💂💂‍♂️🕵️🕵️‍♀️🕵️‍♂️👩‍⚕️👨‍⚕️👩‍🌾👨‍🌾👩‍🍳👨‍🍳👩‍🎓👨‍🎓👩‍🎤👨‍🎤👩‍🏫👨‍🏫👩‍🏭👨‍🏭👩‍💻👨‍💻👩‍💼👨‍💼👩‍🔧👨‍🔧👩‍🔬👨‍🔬👩‍🎨👨‍🎨👩‍🚒👨‍🚒👩‍✈️👨‍✈️👩‍🚀👨‍🚀👩‍⚖️👨‍⚖️👰🤵👸🤴🤶🎅🧙🧙‍♀️🧙‍♂️🧝🧝‍♀️🧝‍♂️🧛🧛‍♀️🧛‍♂️🧟🧟‍♀️🧟‍♂️🧞🧞‍♀️🧞‍♂️🧜🧜‍♀️🧜‍♂️🧚🧚‍♀️🧚‍♂️👼🤰🤱🙇🙇‍♀️🙇‍♂️💁💁‍♀️💁‍♂️🙅🙅‍♀️🙅‍♂️🙆🙆‍♀️🙆‍♂️🙋🙋‍♀️🙋‍♂️💃🕺👯👯‍♂️👯‍♀️🕴️🚶🚶‍♀️🚶‍♂️🏃🏃‍♀️🏃‍♂🧑‍🤝‍🧑👫👭👬💑👩‍❤️‍👨👩‍❤️‍👩👨‍❤️‍👨💏👩‍❤️‍💋👨👩‍❤️‍💋👩👨‍❤️‍💋👨👪👨‍👩‍👦👨‍👩‍👧👨‍👩‍👧‍👦👨‍👩‍👦‍👦👨‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧👩‍👩‍👧‍👦👩‍👩‍👦‍👦👩‍👩‍👧‍👧👨‍👨‍👦👨‍👨‍👧👨‍👨‍👧‍👦👨‍👨‍👦‍👦👨‍👨‍👧‍👧👩‍👦👩‍👧👩‍👧‍👦👩‍👦‍👦👩‍👧‍👧👨‍👦👨‍👧👨‍👧‍👦👨‍👦‍👦👨‍👧‍👧🧥👚👕👖👔👗👙👘👠👡👢👞👟🧦🧤🧣🎩🧢👒🎓⛑️👑💍👝👛👜💼🎒👓🕶️🌂\nAnimals \u0026 Nature 🐶🐱🐭🐹🐰🦊🐻🐼🐨🐯🦁🐮🐷🐽🐸🐵🙈🙉🙊🐒🐔🐧🐦🐤🐣🐥🦆🦅🦉🦇🐺🐗🐴🦄🐝🐛🦋🐌🐚🐞🐜🦗🕷️🕸️🦂🐢🐍🦎🦖🦕🐙🦑🦐🦀🐡🐠🐟🐬🐳🐋🦈🐊🐅🐆🦓🦍🐘🦏🐪🐫🦒🐃🐂🐄🐎🐖🐏🐑🐐🐕🦌🐕‍🐩🐈🐓🦃🕊️🐇🐁🐀🐿️🦔🐾🐉🐲🌵🎄🌲🌳🌴🌱🌿☘️🍀🎍🎋🍃🍂🍁🍄🌾💐🌷🌹🥀🌺🌸🌼🌻🌞🌝🌛🌜🌚🌕🌖🌗🌘🌑🌒🌓🌔🌙🌎🌍🌏💫⭐🌟✨⚡☄️💥🔥🌪️🌈☀️🌤️⛅🌥️☁️🌦️🌧️⛈️🌩️🌨️❄️☃️⛄🌬️💨💧💦☔☂️🌊🌫️\nFood \u0026 Drink 🍏🍎🍐🍊🍋🍌🍉🍇🍓🍈🍒🍑🍍🥥🥝🍅🍆🥑🥦🥒🌶️🌽🥕🥔🍠🥐🍞🥖🥨🧀🥚🍳🥞🥓🥩🍗🍖🌭🍔🍟🍕🥪🥙🌮🌯🥗🥘🥫🍝🍜🍲🍛🍣🍱🥟🍤🍙🍚🍘🍥🥠🍢🍡🍧🍨🍦🥧🍰🎂🍮🍭🍬🍫🍿🍩🍪🌰🥜🍯🥛🍼☕🍵🥤🍶🍺🍻🥂🍷🥃🍸🍹🍾🥄🍴🍽️🥣🥡🥢\nActivity ⚽🏀🏈⚾🎾🏐🏉🎱🏓🏸🏒🏑🏏🥅⛳🏹🎣🥊🥋🎽🛷⛸️🥌🎿⛷️🏂🏋️🏋️‍♀️🏋️‍♂️🤼🤼♀️🤼♂️🤸🤸‍♀️🤸‍♂️⛹️⛹️‍♀️⛹️‍♂️🤺🤾🤾‍♀️🤾‍♂️🏌️🏌️‍♀️🏌️‍♂️🏇🧘🧘‍♀️🧘‍♂️🏄🏄‍♀️🏄‍♂️🏊🏊‍♀️🏊‍♂️🤽🤽‍♀️🤽‍♂️🚣🚣‍♀️🚣‍♂️🧗🧗‍♀️🧗‍♂️🚵🚵‍♀️🚵‍♂️🚴🚴‍♀️🚴‍♂️🏆🥇🥈🥉🏅🎖️🏵️🎗️🎫🎟️🎪🤹🤹‍♀️🤹‍♂️🎭🎨🎬🎤🎧🎼🎹🥁🎷🎺🎸🎻🎲♟️🎯🎳🎮🎰\nTravel \u0026 Places 🚗🚕🚙🚌🚎🏎️🚓🚑🚐🚒🚚🚛🚜🛵🏍️🛴🚲🚨🚔🚍🚘🚖🚡🚠🚟🚃🚋🚞🚝🚄🚅🚈🚂🚆🚇🚊🚉✈️🛫🛬🛩️💺🛰️🚀🛸🚁🛶⛵🚤🛥️🛳️⛴️🚢⚓⛽🚧🚦🚥🚏🗺️🗿🗽🗼🏰🏯🏟️🎡🎢🎠⛲⛱️🏖️🏝️🏜️🌋⛰️🏔️🗻🏕️⛺🏠🏡🏘️🏚️🏗️🏭🏢🏬🏣🏤🏥🏦🏨🏪🏫🏩💒🏛️⛪🕌🕍🕋⛩️🛤️🛣️🗾🎑🏞️🌅🌄🌠🎇🎆🌇🌆🏙️🌃🌌🌉🌁\nObjects ⌚📱📲💻⌨️🖥️🖨️🖱️🖲️🕹️🗜️💽💾💿📀📼📷📸📹🎥📽️🎞️📞☎️📟📠📺📻🎙️🎚️🎛️⏱️⏲️⏰🕰️⌛⏳📡🔋🔌💡🔦🕯️🛢️💸💵💴💶💷💰💳💎⚖️🔧🔨⚒️🛠️⛏️🔩⚙️⛓️⚔️🛡️🚬⚰️⚱️🏺🔮📿💈⚗️🔭🔬🕳️💊💉🌡️🚽🚰🚿🛁🛀🛎️🔑🗝️🚪🛋️🛏️🛌🖼️🛍️🛒🎁🎈🎏🎀🎊🎉🎎🏮🎐✉️📩📨📧💌📥📤📦🏷️📪📫📬📭📮📯📜📃📄📑🧾📊📈📉🗒️🗓️📆📅🗑️📇🗃️🗳️🗄️📋📁📂🗂️🗞️📰📓📔📒📕📗📘📙📚📖🔖🔗📎🖇️📐📏📌📍✂️🖊️🖋️✒️🖌️🖍️📝✏️🔍🔎🔏🔐🔒🔓\nSymbols ❤️🧡💛💚💙💜🖤💔❣️💕💞💓💗💖💘💝💟☮️✝️☪️🕉️☸️✡️🔯🕎☯️☦️🛐⛎♈♉♊♋♌♍♎♏♐♑♒♓🆔⚛️🉑☢️☣️📴📳🈶🈚🈸🈺🈷️✴️🆚💮🉐㊙️㊗️🈴🈵🈹🈲🅰️🅱️🆎🆑🅾️🆘❌⭕🛑⛔📛🚫💯💢♨️🚷🚯🚳🚱🔞📵🚭❗❕❓❔🔆️⚠️🚸🔱⚜️🔰♻️✅🈯💹❇️✳️🔣ℹ️🔤🔡🔠🆖🆗🆙🆒🆕🆓0️⃣1️⃣2️⃣3️⃣4️⃣5️⃣6️⃣7️⃣8️⃣9️⃣🔟🔢⏏️▶️⏸️⏯️⏹️⏺️⏭️⏮️⏩⏪⏬◀➡️⬅️⬆️⬇️↪️↩️⤴️⤵️🔀🔁🔂🔄🔃🎵🎶➕➖➗✖️💲🔚🔙🔛🔝🔜✔️☑️🔘⚪⚫🔴🔵🔺🔻🔶🔷🔳🔲🔈🔇🔉🔊🔔🔕📣📢🗨️👁️‍🗨️💬💭🗯️🃏🎴🀄🕐🕑🕒🕓🕔🕕🕖🕗🕘🕙🕚🕛🕜🕝🕞🕟🕠🕡🕢🕣🕤🕥🕦🕧️⚕️\nFlags 🏳️🏴🏁🚩🏳️‍🌈🏴‍☠️\n","description":"","tags":["Hexo","Emoji"],"title":"Emoji表情库（一）","uri":"/posts/emoji%E8%A1%A8%E6%83%85%E5%BA%93%E4%B8%80/"},{"categories":["TECH"],"content":"要全局使用 emoji, 需要在你的网站配置中设置 enableEmoji 为 true, 然后你就可以直接在文章中输入 emoji 的代码1。\n它们以冒号开头和结尾，并且包含 emoji 的 代码:\n1  :代码:   以下符号清单是 emoji 代码的非常有用的参考.\n表情与情感 笑脸表情    图标 代码 图标 代码     😀 grinning 😃 smiley   😄 smile 😁 grin   😆 laughing satisfied 😅 sweat_smile   🤣 rofl 😂 joy   🙂 slightly_smiling_face 🙃 upside_down_face   😉 wink 😊 blush   😇 innocent      爱意表情    图标 代码 图标 代码     😍 heart_eyes 😘 kissing_heart   😗 kissing ☺️ relaxed   😚 kissing_closed_eyes 😙 kissing_smiling_eyes    吐舌头表情    图标 代码 图标 代码     😋 yum 😛 stuck_out_tongue   😜 stuck_out_tongue_winking_eye 😝 stuck_out_tongue_closed_eyes   🤑 money_mouth_face      带手的表情    图标 代码 图标 代码     🤗 hugs 🤔 thinking    中性表情    图标 代码 图标 代码     🤐 zipper_mouth_face 😐 neutral_face   😑 expressionless 😶 no_mouth   😏 smirk 😒 unamused   🙄 roll_eyes 😬 grimacing   🤥 lying_face      困倦的表情    图标 代码 图标 代码     😌 relieved 😔 pensive   😪 sleepy 🤤 drooling_face   😴 sleeping      不适的表情    图标 代码 图标 代码     😷 mask 🤒 face_with_thermometer   🤕 face_with_head_bandage 🤢 nauseated_face   🤧 sneezing_face 😵 dizzy_face    戴帽子的表情    图标 代码 图标 代码     🤠 cowboy_hat_face      戴眼镜的表情    图标 代码 图标 代码     😎 sunglasses 🤓 nerd_face    担心的表情    图标 代码 图标 代码     😕 confused 😟 worried   🙁 slightly_frowning_face ☹ frowning_face   😮 open_mouth 😯 hushed   😲 astonished 😳 flushed   😦 frowning 😧 anguished   😨 fearful 😰 cold_sweat   😥 disappointed_relieved 😢 cry   😭 sob 😱 scream   😖 confounded 😣 persevere   😞 disappointed 😓 sweat   😩 weary 😫 tired_face    否定的表情    图标 代码 图标 代码     😤 triumph 😡 pout rage   😠 angry 😈 smiling_imp   👿 imp 💀 skull   ☠️ skull_and_crossbones      特殊打扮的表情    图标 代码 图标 代码     💩 hankey poop shit 🤡 clown_face   👹 japanese_ogre 👺 japanese_goblin   👻 ghost 👽 alien   👾 space_invader 🤖 robot    猫脸表情    图标 代码 图标 代码     😺 smiley_cat 😸 smile_cat   😹 joy_cat 😻 heart_eyes_cat   😼 smirk_cat 😽 kissing_cat   🙀 scream_cat 😿 crying_cat_face   😾 pouting_cat      猴脸表情    图标 代码 图标 代码     🙈 see_no_evil 🙉 hear_no_evil   🙊 speak_no_evil      情感    图标 代码 图标 代码     💋 kiss 💌 love_letter   💘 cupid 💝 gift_heart   💖 sparkling_heart 💗 heartpulse   💓 heartbeat 💞 revolving_hearts   💕 two_hearts 💟 heart_decoration   ❣️ heavy_heart_exclamation 💔 broken_heart   ❤️ heart 💛 yellow_heart   💚 green_heart 💙 blue_heart   💜 purple_heart 🖤 black_heart   💯 100 💢 anger   💥 boom collision 💫 dizzy   💦 sweat_drops 💨 dash   🕳️ hole 💣 bomb   💬 speech_balloon 👁️‍🗨️ eye_speech_bubble   🗯️ right_anger_bubble 💭 thought_balloon   💤 zzz      人与身体 张开手掌的手势    图标 代码 图标 代码     👋 wave 🤚 raised_back_of_hand   🖐️ raised_hand_with_fingers_splayed ✋ hand raised_hand   🖖 vulcan_salute      部分手指的手势    图标 代码 图标 代码     👌 ok_hand ✌️ v   🤞 crossed_fingers 🤘 metal   🤙 call_me_hand      一根手指的手势    图标 代码 图标 代码     👈 point_left 👉 point_right   👆 point_up_2 🖕 fu middle_finger   👇 point_down ☝️ point_up    握紧的手势    图标 代码 图标 代码     👍 +1 thumbsup 👎 -1 thumbsdown   ✊ fist fist_raised 👊 facepunch fist_oncoming punch   🤛 fist_left 🤜 fist_right    两只手    图标 代码 图标 代码     👏 clap 🙌 raised_hands   👐 open_hands 🤝 handshake   🙏 pray      握住东西的手势    图标 代码 图标 代码     ✍️ writing_hand 💅 nail_care   🤳 selfie      身体部位    图标 代码 图标 代码     💪 muscle 👂 ear   👃 nose 👀 eyes   👁️ eye 👅 tongue   👄 lips      人    图标 代码 图标 代码     👶 baby 👦 boy   👧 girl :blonde_man: blonde_man person_with_blond_hair   👨 man 👩 woman   👱‍♀️ blonde_woman 👴 older_man   👵 older_woman      身体动作    图标 代码 图标 代码     🙍‍♀️ frowning_woman person_frowning 🙍‍♂️ frowning_man   🙎‍♀️ person_with_pouting_face pouting_woman 🙎‍♂️ pouting_man   🙅‍♀️ ng_woman no_good no_good_woman 🙅‍♂️ ng_man no_good_man   🙆‍♀️ ok_woman 🙆‍♂️ ok_man   💁‍♀️ information_desk_person sassy_woman tipping_hand_woman 💁‍♂️ sassy_man tipping_hand_man   🙋‍♀️ raising_hand raising_hand_woman 🙋‍♂️ raising_hand_man   🙇‍♂️ bow bowing_man 🙇‍♀️ bowing_woman   🤦‍♂️ man_facepalming 🤦‍♀️ woman_facepalming   🤷‍♂️ man_shrugging 🤷‍♀️ woman_shrugging    人物角色    图标 代码 图标 代码     👨‍⚕️ man_health_worker 👩‍⚕️ woman_health_worker   👨‍🎓 man_student 👩‍🎓 woman_student   👨‍🏫 man_teacher 👩‍🏫 woman_teacher   👨‍⚖️ man_judge 👩‍⚖️ woman_judge   👨‍🌾 man_farmer 👩‍🌾 woman_farmer   👨‍🍳 man_cook 👩‍🍳 woman_cook   👨‍🔧 man_mechanic 👩‍🔧 woman_mechanic   👨‍🏭 man_factory_worker 👩‍🏭 woman_factory_worker   👨‍💼 man_office_worker 👩‍💼 woman_office_worker   👨‍🔬 man_scientist 👩‍🔬 woman_scientist   👨‍💻 man_technologist 👩‍💻 woman_technologist   👨‍🎤 man_singer 👩‍🎤 woman_singer   👨‍🎨 man_artist 👩‍🎨 woman_artist   👨‍✈️ man_pilot 👩‍✈️ woman_pilot   👨‍🚀 man_astronaut 👩‍🚀 woman_astronaut   👨‍🚒 man_firefighter 👩‍🚒 woman_firefighter   👮‍♂️ cop policeman 👮‍♀️ policewoman   🕵 detective male_detective 🕵️‍♀️ female_detective   💂‍♂️ guardsman 💂‍♀️ guardswoman   👷‍♂️ construction_worker construction_worker_man 👷‍♀️ construction_worker_woman   🤴 prince 👸 princess   👳‍♂️ man_with_turban 👳‍♀️ woman_with_turban   👲 man_with_gua_pi_mao 🤵‍♂️ man_in_tuxedo   👰 bride_with_veil 🤰 pregnant_woman    幻想的人物    图标 代码 图标 代码     👼 angel 🎅 santa   🤶 mrs_claus      人物活动    图标 代码 图标 代码     💆‍♀️ massage massage_woman 💆‍♂️ massage_man   💇‍♀️ haircut haircut_woman 💇‍♂️ haircut_man   🚶‍♂️ walking walking_man 🚶‍♀️ walking_woman   🏃‍♂️ runner running running_man 🏃‍♀️ running_woman   💃 dancer 🕺 man_dancing   🕴️ business_suit_levitating 👯‍♀️ dancers dancing_women   👯‍♂️ dancing_men      体育    图标 代码 图标 代码     🤺 person_fencing 🏇 horse_racing   ⛷️ skier 🏂 snowboarder   🏌️‍♂️ golfing_man 🏌️‍♀️ golfing_woman   🏄‍♂️ surfer surfing_man 🏄‍♀️ surfing_woman   🚣‍♂️ rowboat rowing_man 🚣‍♀️ rowing_woman   🏊‍♂️ swimmer swimming_man 🏊‍♀️ swimming_woman   ⛹️‍♂️ basketball_man ⛹️‍♀️ basketball_woman   🏋️‍♂️ weight_lifting_man 🏋️‍♀️ weight_lifting_woman   🚴‍♂️ bicyclist biking_man 🚴‍♀️ biking_woman   🚵‍♂️ mountain_bicyclist mountain_biking_man 🚵‍♀️ mountain_biking_woman   🤸‍♂️ man_cartwheeling 🤸‍♀️ woman_cartwheeling   🤼‍♂️ men_wrestling 🤼‍♀️ women_wrestling   🤽‍♂️ man_playing_water_polo 🤽‍♀️ woman_playing_water_polo   🤾‍♂️ man_playing_handball 🤾‍♀️ woman_playing_handball   🤹‍♂️ man_juggling 🤹‍♀️ woman_juggling    休息    图标 代码 图标 代码     🛀 bath 🛌 sleeping_bed    家庭    图标 代码 图标 代码     👭 two_women_holding_hands 👫 couple   👬 two_men_holding_hands 👩‍❤️‍💋‍👨 couplekiss_man_woman   👨‍❤️‍💋‍👨 couplekiss_man_man 👩‍❤️‍💋‍👩 couplekiss_woman_woman   👩‍❤️‍👨 couple_with_heart couple_with_heart_woman_man 👨‍❤️‍👨 couple_with_heart_man_man   👩‍❤️‍👩 couple_with_heart_woman_woman 👨‍👩‍👦 family family_man_woman_boy   👨‍👩‍👧 family_man_woman_girl 👨‍👩‍👧‍👦 family_man_woman_girl_boy   👨‍👩‍👦‍👦 family_man_woman_boy_boy 👨‍👩‍👧‍👧 family_man_woman_girl_girl   👨‍👨‍👦 family_man_man_boy 👨‍👨‍👧 family_man_man_girl   👨‍👨‍👧‍👦 family_man_man_girl_boy 👨‍👨‍👦‍👦 family_man_man_boy_boy   👨‍👨‍👧‍👧 family_man_man_girl_girl 👩‍👩‍👦 family_woman_woman_boy   👩‍👩‍👧 family_woman_woman_girl 👩‍👩‍👧‍👦 family_woman_woman_girl_boy   👩‍👩‍👦‍👦 family_woman_woman_boy_boy 👩‍👩‍👧‍👧 family_woman_woman_girl_girl   👨‍👦 family_man_boy 👨‍👦‍👦 family_man_boy_boy   👨‍👧 family_man_girl 👨‍👧‍👦 family_man_girl_boy   👨‍👧‍👧 family_man_girl_girl 👩‍👦 family_woman_boy   👩‍👦‍👦 family_woman_boy_boy 👩‍👧 family_woman_girl   👩‍👧‍👦 family_woman_girl_boy 👩‍👧‍👧 family_woman_girl_girl    人物符号    图标 代码 图标 代码     🗣 speaking_head 👤 bust_in_silhouette   👥 busts_in_silhouette 👣 footprints    动物与自然 哺乳动物    图标 代码 图标 代码     🐵 monkey_face 🐒 monkey   🦍 gorilla 🐶 dog   🐕 dog2 🐩 poodle   🐺 wolf 🦊 fox_face   🐱 cat 🐈 cat2   🦁 lion 🐯 tiger   🐅 tiger2 🐆 leopard   🐴 horse 🐎 racehorse   🦄 unicorn 🦌 deer   🐮 cow 🐂 ox   🐃 water_buffalo 🐄 cow2   🐷 pig 🐖 pig2   🐗 boar 🐽 pig_nose   🐏 ram 🐑 sheep   🐐 goat 🐪 dromedary_camel   🐫 camel 🐘 elephant   🦏 rhinoceros 🐭 mouse   🐁 mouse2 🐀 rat   🐹 hamster 🐰 rabbit   🐇 rabbit2 🐿️ chipmunk   🦇 bat 🐻 bear   🐨 koala 🐼 panda_face   🐾 feet paw_prints      鸟类    图标 代码 图标 代码     🦃 turkey 🐔 chicken   🐓 rooster 🐣 hatching_chick   🐤 baby_chick 🐥 hatched_chick   🐦 bird 🐧 penguin   🕊 dove 🦅 eagle   🦆 duck 🦉 owl    两栖动物    icon code icon code     🐸 frog      爬虫类    图标 代码 图标 代码     🐊 crocodile 🐢 turtle   🦎 lizard 🐍 snake   🐲 dragon_face 🐉 dragon    海洋动物    图标 代码 图标 代码     🐳 whale 🐋 whale2   🐬 dolphin flipper 🐟 fish   🐠 tropical_fish 🐡 blowfish   🦈 shark 🐙 octopus   🐚 shell      虫类    图标 代码 图标 代码     🐌 snail 🦋 butterfly   🐛 bug 🐜 ant   🐝 bee honeybee 🪲 beetle   🕷️ spider 🕸️ spider_web   🦂 scorpion      花类植物    图标 代码 图标 代码     💐 bouquet 🌸 cherry_blossom   💮 white_flower 🏵️ rosette   🌹 rose 🥀 wilted_flower   🌺 hibiscus 🌻 sunflower   🌼 blossom 🌷 tulip    其它植物    图标 代码 图标 代码     🌱 seedling 🌲 evergreen_tree   🌳 deciduous_tree 🌴 palm_tree   🌵 cactus 🌾 ear_of_rice   🌿 herb ☘️ shamrock   🍀 four_leaf_clover 🍁 maple_leaf   🍂 fallen_leaf 🍃 leaves    食物与饮料 水果    图标 代码 图标 代码     🍇 grapes 🍈 melon   🍉 watermelon 🍊 mandarin orange tangerine   🍋 lemon 🍌 banana   🍍 pineapple 🍎 apple   🍏 green_apple 🍐 pear   🍑 peach 🍒 cherries   🍓 strawberry 🥝 kiwi_fruit   🍅 tomato      蔬菜    图标 代码 图标 代码     🥑 avocado 🍆 eggplant   🥔 potato 🥕 carrot   🌽 corn 🌶️ hot_pepper   🥒 cucumber 🍄 mushroom   🥜 peanuts 🌰 chestnut    快餐    图标 代码 图标 代码     🍞 bread 🥐 croissant   🥖 baguette_bread 🥞 pancakes   🧀 cheese 🍖 meat_on_bone   🍗 poultry_leg 🥓 bacon   🍔 hamburger 🍟 fries   🍕 pizza 🌭 hotdog   🌮 taco 🌯 burrito   🥙 stuffed_flatbread 🥚 egg   🍳 fried_egg 🥘 shallow_pan_of_food   🍲 stew 🥗 green_salad   🍿 popcorn      亚洲食物    图标 代码 图标 代码     🍱 bento 🍘 rice_cracker   🍙 rice_ball 🍚 rice   🍛 curry 🍜 ramen   🍝 spaghetti 🍠 sweet_potato   🍢 oden 🍣 sushi   🍤 fried_shrimp 🍥 fish_cake   🍡 dango      海鲜    图标 代码 图标 代码     🦀 crab 🦐 shrimp   🦑 squid      甜点    图标 代码 图标 代码     🍦 icecream 🍧 shaved_ice   🍨 ice_cream 🍩 doughnut   🍪 cookie 🎂 birthday   🍰 cake 🍫 chocolate_bar   🍬 candy 🍭 lollipop   🍮 custard 🍯 honey_pot    饮料    图标 代码 图标 代码     🍼 baby_bottle 🥛 milk_glass   ☕ coffee 🍵 tea   🍶 sake 🍾 champagne   🍷 wine_glass 🍸 cocktail   🍹 tropical_drink 🍺 beer   🍻 beers 🥂 clinking_glasses   🥃 tumbler_glass      餐具    图标 代码 图标 代码     🍽️ plate_with_cutlery 🍴 fork_and_knife   🥄 spoon 🔪 hocho knife   🏺 amphora      旅游与地理 地图    图标 代码 图标 代码     🌍 earth_africa 🌎 earth_americas   🌏 earth_asia 🌐 globe_with_meridians   🗺️ world_map 🗾 japan    地理现象    图标 代码 图标 代码     🏔 mountain_snow ⛰️ mountain   🌋 volcano 🗻 mount_fuji   🏕️ camping ⛱ beach_umbrella   🏜️ desert 🏝️ desert_island   🏞️ national_park      建筑物    图标 代码 图标 代码     🏟️ stadium 🏛️ classical_building   🏗️ building_construction 🏘 houses   🏚 derelict_house 🏠 house   🏡 house_with_garden 🏢 office   🏣 post_office 🏤 european_post_office   🏥 hospital 🏦 bank   🏨 hotel 🏩 love_hotel   🏪 convenience_store 🏫 school   🏬 department_store 🏭 factory   🏯 japanese_castle 🏰 european_castle   💒 wedding 🗼 tokyo_tower   🗽 statue_of_liberty      宗教建筑    图标 代码 图标 代码     ⛪ church 🕌 mosque   🕍 synagogue ⛩️ shinto_shrine   🕋 kaaba      其它地点    图标 代码 图标 代码     ⛲ fountain ⛺ tent   🌁 foggy 🌃 night_with_stars   🏙️ cityscape 🌄 sunrise_over_mountains   🌅 sunrise 🌆 city_sunset   🌇 city_sunrise 🌉 bridge_at_night   ♨️ hotsprings 🎠 carousel_horse   🎡 ferris_wheel 🎢 roller_coaster   💈 barber 🎪 circus_tent    陆路运输    图标 代码 图标 代码     🚂 steam_locomotive 🚃 railway_car   🚄 bullettrain_side 🚅 bullettrain_front   🚆 train2 🚇 metro   🚈 light_rail 🚉 station   🚊 tram 🚝 monorail   🚞 mountain_railway 🚋 train   🚌 bus 🚍 oncoming_bus   🚎 trolleybus 🚐 minibus   🚑 ambulance 🚒 fire_engine   🚓 police_car 🚔 oncoming_police_car   🚕 taxi 🚖 oncoming_taxi   🚗 car red_car 🚘 oncoming_automobile   🚙 blue_car 🚚 truck   🚛 articulated_lorry 🚜 tractor   🏎️ racing_car 🏍 motorcycle   🛵 motor_scooter 🚲 bike   🛴 kick_scooter 🚏 busstop   🛣️ motorway 🛤️ railway_track   🛢️ oil_drum ⛽ fuelpump   🚨 rotating_light 🚥 traffic_light   🚦 vertical_traffic_light 🛑 stop_sign   🚧 construction      水路运输    图标 代码 图标 代码     ⚓ anchor ⛵ boat sailboat   🛶 canoe 🚤 speedboat   🛳️ passenger_ship ⛴️ ferry   🛥️ motor_boat 🚢 ship    空中运输    图标 代码 图标 代码     ✈️ airplane 🛩️ small_airplane   🛫 flight_departure 🛬 flight_arrival   💺 seat 🚁 helicopter   🚟 suspension_railway 🚠 mountain_cableway   🚡 aerial_tramway 🛰️ artificial_satellite   🚀 rocket      旅馆    icon code icon code     🛎️ bellhop_bell      时间    图标 代码 图标 代码     ⌛ hourglass ⏳ hourglass_flowing_sand   ⌚ watch ⏰ alarm_clock   ⏱️ stopwatch ⏲️ timer_clock   🕰️ mantelpiece_clock 🕛 clock12   🕧 clock1230 🕐 clock1   🕜 clock130 🕑 clock2   🕝 clock230 🕒 clock3   🕞 clock330 🕓 clock4   🕟 clock430 🕔 clock5   🕠 clock530 🕕 clock6   🕡 clock630 🕖 clock7   🕢 clock730 🕗 clock8   🕣 clock830 🕘 clock9   🕤 clock930 🕙 clock10   🕥 clock1030 🕚 clock11   🕦 clock1130      天空与天气    图标 代码 图标 代码     🌑 new_moon 🌒 waxing_crescent_moon   🌓 first_quarter_moon 🌔 moon waxing_gibbous_moon   🌕 full_moon 🌖 waning_gibbous_moon   🌗 last_quarter_moon 🌘 waning_crescent_moon   🌙 crescent_moon 🌚 new_moon_with_face   🌛 first_quarter_moon_with_face 🌜 last_quarter_moon_with_face   🌡️ thermometer ☀️ sunny   🌝 full_moon_with_face 🌞 sun_with_face   ⭐ star 🌟 star2   🌠 stars 🌌 milky_way   ☁️ cloud ⛅ partly_sunny   ⛈ cloud_with_lightning_and_rain 🌤 sun_behind_small_cloud   🌥 sun_behind_large_cloud 🌦 sun_behind_rain_cloud   🌧 cloud_with_rain 🌨 cloud_with_snow   🌩 cloud_with_lightning 🌪️ tornado   🌫️ fog 🌬 wind_face   🌀 cyclone 🌈 rainbow   🌂 closed_umbrella ☂️ open_umbrella   ☂️ umbrella ⛱️ parasol_on_ground   ⚡ zap ❄️ snowflake   ☃️ snowman_with_snow ☃️ snowman   ☄️ comet 🔥 fire   💧 droplet 🌊 ocean    活动 事件    图标 代码 图标 代码     🎃 jack_o_lantern 🎄 christmas_tree   🎆 fireworks 🎇 sparkler   ✨ sparkles 🎈 balloon   🎉 tada 🎊 confetti_ball   🎋 tanabata_tree 🎍 bamboo   🎎 dolls 🎏 flags   🎐 wind_chime 🎑 rice_scene   🎀 ribbon 🎁 gift   🎗️ reminder_ribbon 🎟 tickets   🎫 ticket      奖杯与奖牌    图标 代码 图标 代码     🎖️ medal_military 🏆 trophy   🏅 medal_sports 🥇 1st_place_medal   🥈 2nd_place_medal 🥉 3rd_place_medal    体育运动    图标 代码 图标 代码     ⚽ soccer ⚾ baseball   🏀 basketball 🏐 volleyball   🏈 football 🏉 rugby_football   🎾 tennis 🎳 bowling   🦗 cricket 🏑 field_hockey   🏒 ice_hockey 🏓 ping_pong   🏸 badminton 🥊 boxing_glove   🥋 martial_arts_uniform 🥅 goal_net   ⛳ golf ⛸️ ice_skate   🎣 fishing_pole_and_fish 🎽 running_shirt_with_sash   🎿 ski      游戏    图标 代码 图标 代码     🎯 dart 🎱 8ball   🔮 crystal_ball 🎮 video_game   🕹️ joystick 🎰 slot_machine   🎲 game_die ♠️ spades   ♥️ hearts ♦️ diamonds   ♣️ clubs 🃏 black_joker   🀄 mahjong 🎴 flower_playing_cards    艺术与工艺    图标 代码 图标 代码     🎭 performing_arts 🖼 framed_picture   🎨 art      物品 服装    图标 代码 图标 代码     👓 eyeglasses 🕶️ dark_sunglasses   👔 necktie 👕 shirt tshirt   👖 jeans 👗 dress   👘 kimono 👙 bikini   👚 womans_clothes 👛 purse   👜 handbag 👝 pouch   🛍️ shopping 🎒 school_satchel   👞 mans_shoe shoe 👟 athletic_shoe   👠 high_heel 👡 sandal   👢 boot 👑 crown   👒 womans_hat 🎩 tophat   🎓 mortar_board ⛑️ rescue_worker_helmet   📿 prayer_beads 💄 lipstick   💍 ring 💎 gem    声音    图标 代码 图标 代码     🔇 mute 🔈 speaker   🔉 sound 🔊 loud_sound   📢 loudspeaker 📣 mega   📯 postal_horn 🔔 bell   🔕 no_bell      音乐    图标 代码 图标 代码     🎼 musical_score 🎵 musical_note   🎶 notes 🎙️ studio_microphone   🎚️ level_slider 🎛️ control_knobs   🎤 microphone 🎧 headphones   📻 radio      乐器    图标 代码 图标 代码     🎷 saxophone 🎸 guitar   🎹 musical_keyboard 🎺 trumpet   🎻 violin 🥁 drum    电话    图标 代码 图标 代码     📱 iphone 📲 calling   ☎️ phone telephone 📞 telephone_receiver   📟 pager 📠 fax    电脑    图标 代码 图标 代码     🔋 battery 🔌 electric_plug   💻 computer 🖥️ desktop_computer   🖨️ printer ⌨️ keyboard   🖱 computer_mouse 🖲️ trackball   💽 minidisc 💾 floppy_disk   💿 cd 📀 dvd    灯光与影像    图标 代码 图标 代码     🎥 movie_camera 🎞️ film_strip   📽️ film_projector 🎬 clapper   📺 tv 📷 camera   📸 camera_flash 📹 video_camera   📼 vhs 🔍 mag   🔎 mag_right 🕯️ candle   💡 bulb 🔦 flashlight   🏮 izakaya_lantern lantern      书与纸张    图标 代码 图标 代码     📔 notebook_with_decorative_cover 📕 closed_book   📖 book open_book 📗 green_book   📘 blue_book 📙 orange_book   📚 books 📓 notebook   📒 ledger 📃 page_with_curl   📜 scroll 📄 page_facing_up   📰 newspaper 🗞️ newspaper_roll   📑 bookmark_tabs 🔖 bookmark   🏷️ label      钱    图标 代码 图标 代码     💰 moneybag 💴 yen   💵 dollar 💶 euro   💷 pound 💸 money_with_wings   💳 credit_card 💹 chart    邮件    图标 代码 图标 代码     ✉️ email envelope 📧 📧   📨 incoming_envelope 📩 envelope_with_arrow   📤 outbox_tray 📥 inbox_tray   📦 package 📫 mailbox   📪 mailbox_closed 📬 mailbox_with_mail   📭 mailbox_with_no_mail 📮 postbox   🗳 ballot_box      书写    图标 代码 图标 代码     ✏️ pencil2 ✒️ black_nib   🖋 fountain_pen 🖊 pen   🖌 paintbrush 🖍 crayon   📝 memo pencil      办公    图标 代码 图标 代码     💼 briefcase 📁 file_folder   📂 open_file_folder 🗂️ card_index_dividers   📅 date 📆 calendar   🗒 spiral_notepad 🗓 spiral_calendar   📇 card_index 📈 chart_with_upwards_trend   📉 chart_with_downwards_trend 📊 bar_chart   📋 clipboard 📌 pushpin   📍 round_pushpin 📎 paperclip   🖇 paperclips 📏 straight_ruler   📐 triangular_ruler ✂️ scissors   🗃️ card_file_box 🗄️ file_cabinet   🗑️ wastebasket      锁    图标 代码 图标 代码     🔒 lock 🔓 unlock   🔏 lock_with_ink_pen 🔐 closed_lock_with_key   🔑 key 🗝️ old_key    工具    图标 代码 图标 代码     🔨 hammer ⛏️ pick   ⚒️ hammer_and_pick 🛠️ hammer_and_wrench   🗡 dagger ⚔️ crossed_swords   🔫 gun 🏹 bow_and_arrow   🛡️ shield 🔧 wrench   🔩 nut_and_bolt ⚙️ gear   🗜 clamp ⚖ balance_scale   🔗 link ⛓️ chains    科学    图标 代码 图标 代码     ⚗️ alembic 🔬 microscope   🔭 telescope 🛰️ satellite    医疗    图标 代码 图标 代码     💉 syringe 💊 pill    生活用品    图标 代码 图标 代码     🚪 door 🛏️ bed   🛋️ couch_and_lamp 🚽 toilet   🚿 shower 🛁 bathtub   🛒 shopping_cart      其它物品    图标 代码 图标 代码     🚬 smoking ⚰️ coffin   ⚱️ funeral_urn 🗿 moyai    符号 交通标识    图标 代码 图标 代码     🏧 atm 🚮 put_litter_in_its_place   🚰 potable_water ♿ wheelchair   🚹 mens 🚺 womens   🚻 restroom 🚼 baby_symbol   🚾 wc 🛂 passport_control   🛃 customs 🛄 baggage_claim   🛅 left_luggage      警告    图标 代码 图标 代码     ⚠️ warning 🚸 children_crossing   ⛔ no_entry 🚫 no_entry_sign   🚳 no_bicycles 🚭 no_smoking   🚯 do_not_litter 🚱 🚱   🚷 no_pedestrians 📵 no_mobile_phones   🔞 underage ☢ radioactive   ☣ biohazard      箭头    图标 代码 图标 代码     ⬆️ arrow_up ↗️ arrow_upper_right   ➡️ arrow_right ↘️ arrow_lower_right   ⬇️ arrow_down ↙️ arrow_lower_left   ⬅️ arrow_left ↖️ arrow_upper_left   ↕️ arrow_up_down ↔️ left_right_arrow   ↩️ leftwards_arrow_with_hook ↪️ arrow_right_hook   ⤴️ arrow_heading_up ⤵️ arrow_heading_down   🔃 arrows_clockwise 🔄 arrows_counterclockwise   🔙 back 🔚 end   🔛 on 🔜 soon   🔝 top      宗教    图标 代码 图标 代码     🛐 place_of_worship ⚛️ atom_symbol   🕉 om ✡️ star_of_david   ☸️ wheel_of_dharma ☯️ yin_yang   ✝️ latin_cross ☦️ orthodox_cross   ☪️ star_and_crescent ☮️ peace_symbol   🕎 menorah 🔯 six_pointed_star    生肖    图标 代码 图标 代码     ♈ aries ♉ taurus   ♊ gemini ♋ cancer   ♌ leo ♍ virgo   ♎ libra ♏ scorpius   ♐ sagittarius ♑ capricorn   ♒ aquarius ♓ pisces   ⛎ ophiuchus      影像符号    图标 代码 图标 代码     🔀 twisted_rightwards_arrows 🔁 repeat   🔂 repeat_one ▶️ arrow_forward   ⏩ fast_forward ⏭ next_track_button   ⏯ play_or_pause_button ◀️ arrow_backward   ⏪ rewind ⏮️ previous_track_button   🔼 arrow_up_small ⏫ arrow_double_up   🔽 arrow_down_small ⏬ arrow_double_down   ⏸ pause_button ⏹ stop_button   ⏺ record_button 🎦 cinema   🔅 low_brightness 🔆 high_brightness   📶 signal_strength 📳 vibration_mode   📴 mobile_phone_off      数学    图标 代码 图标 代码     ✖️ heavy_multiplication_x ➕ heavy_plus_sign   ➖ heavy_minus_sign ➗ heavy_division_sign    标点符号    图标 代码 图标 代码     ‼️ bangbang ⁉️ interrobang   ❓ question ❔ grey_question   ❕ grey_exclamation ❗ exclamation heavy_exclamation_mark   〰️ wavy_dash      货币    图标 代码 图标 代码     💱 currency_exchange 💲 heavy_dollar_sign    按键符号    图标 代码 图标 代码     #️⃣ hash *️⃣ asterisk   0️⃣ zero 1️⃣ one   2️⃣ two 3️⃣ three   4️⃣ four 5️⃣ five   6️⃣ six 7️⃣ seven   8️⃣ eight 9️⃣ nine   🔟 keycap_ten      字母符号    图标 代码 图标 代码     🔠 capital_abcd 🔡 abcd   🔢 1234 🔣 symbols   🔤 abc 🅰️ a   🆎 ab 🅱️ b   🆑 cl 🆒 cool   🆓 free ℹ️ information_source   🆔 id ⓜ️ m   🆕 new 🆖 ng   🅾️ o2 🆗 ok   🅿️ parking 🆘 sos   🆙 up 🆚 vs   🈁 koko 🈂️ sa   🈷️ u6708 🈶 u6709   🈯 u6307 🉐 ideograph_advantage   🈹 u5272 🈚 u7121   🈲 u7981 🉑 accept   🈸 u7533 🈴 u5408   🈳 u7a7a ㊗️ congratulations   ㊙️ secret 🈺 u55b6   🈵 u6e80      几何符号    图标 代码 图标 代码     🔴 red_circle 🔵 large_blue_circle   ⚫ black_circle ⚪ white_circle   ⬛ black_large_square ⬜ white_large_square   ◼️ black_medium_square ◻️ white_medium_square   ◾ black_medium_small_square ◽ white_medium_small_square   ▪️ black_small_square ▫️ white_small_square   🔶 large_orange_diamond 🔷 large_blue_diamond   🔸 small_orange_diamond 🔹 small_blue_diamond   🔺 small_red_triangle 🔻 small_red_triangle_down   💠 diamond_shape_with_a_dot_inside 🔘 radio_button   🔳 white_square_button 🔲 black_square_button    其它符合    图标 代码 图标 代码     ♻️ recycle ⚜️ fleur_de_lis   🔱 trident 📛 name_badge   🔰 beginner ⭕ o   ✅ white_check_mark ☑️ ballot_box_with_check   ✔️ heavy_check_mark ❌ x   ❎ negative_squared_cross_mark ➰ curly_loop   ➿ loop 〽️ part_alternation_mark   ✳️ eight_spoked_asterisk ✴️ eight_pointed_black_star   ❇️ sparkle ©️ copyright   ®️ registered ™️ tm    旗帜 常用旗帜    图标 代码 图标 代码     🏁 checkered_flag 🚩 triangular_flag_on_post   🎌 crossed_flags 🏴 black_flag   🏳 white_flag 🏳️‍🌈 rainbow_flag    国家和地区旗帜    图标 代码 图标 代码     🇦🇩 andorra 🇦🇪 united_arab_emirates   🇦🇫 afghanistan 🇦🇬 antigua_barbuda   🇦🇮 anguilla 🇦🇱 albania   🇦🇲 armenia 🇦🇴 angola   🇦🇶 antarctica 🇦🇷 argentina   🇦🇸 american_samoa 🇦🇹 austria   🇦🇺 australia 🇦🇼 aruba   🇦🇽 aland_islands 🇦🇿 azerbaijan   🇧🇦 bosnia_herzegovina 🇧🇧 barbados   🇧🇩 bangladesh 🇧🇪 belgium   🇧🇫 burkina_faso 🇧🇬 bulgaria   🇧🇭 bahrain 🇧🇮 burundi   🇧🇯 benin 🇧🇱 st_barthelemy   🇧🇲 bermuda 🇧🇳 brunei   🇧🇴 bolivia 🇧🇶 caribbean_netherlands   🇧🇷 brazil 🇧🇸 bahamas   🇧🇹 bhutan 🇧🇼 botswana   🇧🇾 belarus 🇧🇿 belize   🇨🇦 canada 🇨🇨 cocos_islands   🇨🇩 congo_kinshasa 🇨🇫 central_african_republic   🇨🇬 congo_brazzaville 🇨🇭 switzerland   🇨🇮 cote_divoire 🇨🇰 cook_islands   🇨🇱 chile 🇨🇲 cameroon   🇨🇳 cn 🇨🇴 colombia   🇨🇷 costa_rica 🇨🇺 cuba   🇨🇻 cape_verde 🇨🇼 curacao   🇨🇽 christmas_island 🇨🇾 cyprus   🇨🇿 czech_republic 🇩🇪 de   🇩🇯 djibouti 🇩🇰 denmark   🇩🇲 dominica 🇩🇴 dominican_republic   🇩🇿 algeria 🇪🇨 ecuador   🇪🇪 estonia 🇪🇬 egypt   🇪🇭 western_sahara 🇪🇷 eritrea   🇪🇸 es 🇪🇹 ethiopia   🇪🇺 eu european_union 🇫🇮 finland   🇫🇯 fiji 🇫🇰 falkland_islands   🇫🇲 micronesia 🇫🇴 faroe_islands   🇫🇷 fr 🇬🇦 gabon   🇬🇧 gb uk 🇬🇩 grenada   🇬🇪 georgia 🇬🇫 french_guiana   🇬🇬 guernsey 🇬🇭 ghana   🇬🇮 gibraltar 🇬🇱 greenland   🇬🇲 gambia 🇬🇳 guinea   🇬🇵 guadeloupe 🇬🇶 equatorial_guinea   🇬🇷 greece 🇬🇸 south_georgia_south_sandwich_islands   🇬🇹 guatemala 🇬🇺 guam   🇬🇼 guinea_bissau 🇬🇾 guyana   🇭🇰 hong_kong 🇭🇳 honduras   🇭🇷 croatia 🇭🇹 haiti   🇭🇺 hungary 🇮🇨 canary_islands   🇮🇩 indonesia 🇮🇪 ireland   🇮🇱 israel 🇮🇲 isle_of_man   🇮🇳 india 🇮🇴 british_indian_ocean_territory   🇮🇶 iraq 🇮🇷 iran   🇮🇸 iceland 🇮🇹 it   🇯🇪 jersey 🇯🇲 jamaica   🇯🇴 jordan 🇯🇵 jp   🇰🇪 kenya 🇰🇬 kyrgyzstan   🇰🇭 cambodia 🇰🇮 kiribati   🇰🇲 comoros 🇰🇳 st_kitts_nevis   🇰🇵 north_korea 🇰🇷 kr   🇰🇼 kuwait 🇰🇾 cayman_islands   🇰🇿 kazakhstan 🇱🇦 laos   🇱🇧 lebanon 🇱🇨 st_lucia   🇱🇮 liechtenstein 🇱🇰 sri_lanka   🇱🇷 liberia 🇱🇸 lesotho   🇱🇹 lithuania 🇱🇺 luxembourg   🇱🇻 latvia 🇱🇾 libya   🇲🇦 morocco 🇲🇨 monaco   🇲🇩 moldova 🇲🇪 montenegro   🇲🇬 madagascar 🇲🇭 marshall_islands   🇲🇰 macedonia 🇲🇱 mali   🇲🇲 myanmar 🇲🇳 mongolia   🇲🇴 macau 🇲🇵 northern_mariana_islands   🇲🇶 martinique 🇲🇷 mauritania   🇲🇸 montserrat 🇲🇹 malta   🇲🇺 mauritius 🇲🇻 maldives   🇲🇼 malawi 🇲🇽 mexico   🇲🇾 malaysia 🇲🇿 mozambique   🇳🇦 namibia 🇳🇨 new_caledonia   🇳🇪 niger 🇳🇫 norfolk_island   🇳🇬 nigeria 🇳🇮 nicaragua   🇳🇱 netherlands 🇳🇴 norway   🇳🇵 nepal 🇳🇷 nauru   🇳🇺 niue 🇳🇿 new_zealand   🇴🇲 oman 🇵🇦 panama   🇵🇪 peru 🇵🇫 french_polynesia   🇵🇬 papua_new_guinea 🇵🇭 philippines   🇵🇰 pakistan 🇵🇱 poland   🇵🇲 st_pierre_miquelon 🇵🇳 pitcairn_islands   🇵🇷 puerto_rico 🇵🇸 palestinian_territories   🇵🇹 portugal 🇵🇼 palau   🇵🇾 paraguay 🇶🇦 qatar   🇷🇪 reunion 🇷🇴 romania   🇷🇸 serbia 🇷🇺 ru   🇷🇼 rwanda 🇸🇦 saudi_arabia   🇸🇧 solomon_islands 🇸🇨 seychelles   🇸🇩 sudan 🇸🇪 sweden   🇸🇬 singapore 🇸🇭 st_helena   🇸🇮 slovenia 🇸🇰 slovakia   🇸🇱 sierra_leone 🇸🇲 san_marino   🇸🇳 senegal 🇸🇴 somalia   🇸🇷 suriname 🇸🇸 south_sudan   🇸🇹 sao_tome_principe 🇸🇻 el_salvador   🇸🇽 sint_maarten 🇸🇾 syria   🇸🇿 swaziland 🇹🇨 turks_caicos_islands   🇹🇩 chad 🇹🇫 french_southern_territories   🇹🇬 togo 🇹🇭 thailand   🇹🇯 tajikistan 🇹🇰 tokelau   🇹🇱 timor_leste 🇹🇲 turkmenistan   🇹🇳 tunisia 🇹🇴 tonga   🇹🇷 tr 🇹🇹 trinidad_tobago   🇹🇻 tuvalu 🇹🇼 taiwan   🇹🇿 tanzania 🇺🇦 ukraine   🇺🇬 uganda 🇺🇸 us   🇺🇾 uruguay 🇺🇿 uzbekistan   🇻🇦 vatican_city 🇻🇨 st_vincent_grenadines   🇻🇪 venezuela 🇻🇬 british_virgin_islands   🇻🇮 us_virgin_islands 🇻🇳 vietnam   🇻🇺 vanuatu 🇼🇫 wallis_futuna   🇼🇸 samoa 🇽🇰 kosovo   🇾🇪 yemen 🇾🇹 mayotte   🇿🇦 south_africa 🇿🇲 zambia   🇿🇼 zimbabwe        Emoji 支持 ↩︎\n   ","description":"","tags":["Hexo","Emoji"],"title":"Emoji表情库（二）","uri":"/posts/emoji%E8%A1%A8%E6%83%85%E5%BA%93%E4%BA%8C/"},{"categories":["TECH","Hexo"],"content":" 开始之前的说明 文中所有的指令都是在..Hexo..文件夹下开启的命令行中执行的\n  代码对比  1 2 3  This is a diff block. + This is add! - This is subtract!   Bash指令  1  bash指令   提示信息  这是一个info提示\n\r这是一个success提示 \r这是一个warning提示\n\r这是一个danger提示\n\r文件目录     序号 名词 说明 目录     1 站点配置文件 ..站点目录..下的_config.yml文件 Hexo/_config.yml   2 主题配置文件 ..主题目录..下的_config.yml文件 Hexo/themes/Annie/_config.yml   3 文章目录 文章.md文件 Hexo/source/_posts    LOGO和FAVICON 编辑主题配置文件，设置favicon和logo的路径即可。\n 当然，你可以使用..文字..logo或..图片..logo，即logo的值为空时，主题使用title的值作为logo！\n 1 2 3 4 5 6 7 8  # favicon \u0026 logo # if the value of logo is false, the 'title' is optional. - favicon: /img/favicon.ico - logo: /img/logo.png - title: Welcome + favicon: /img/your-favicon.ico + logo: /img/your-logo.png + title: your-title    这里的..img..是指的Hexo/themes/Annie/source/img目录\n 页头背景图片 文章详情页的..页头背景图片..为该文章的封面图，其他页的..页头背景图片..为随机图片或固定图片。\n 原则上: 使用..固定图片..时，应将参数mode设为normal，然后设置normal_url的路径； 使用..随机图片..时，应将参数mode设为random，然后设置random_url的路径。\n # background_image\r# /img/1.jpg\r# https://source.unsplash.com/collection/954550/1920x1080\r# https://sariay.github.io/Random-img/\r# May be cause CROS bug!\rbackground_image:\rmode: normal #normal or random\rnormal_url: /img/1.jpg\rrandom_max: 110 random_url: https://sariay.github.io/Random-img/\r注意跨域问题，尽量不使用跨域的图片（即背景图片和网页最好托管在一起，存放于同一服务器）\n\r编辑主题配置文件，找到background_image标签进行相应设置。\n 使用..固定图片..，请确保参数mode设为normal，然后设置参数normal_url的值  1 2 3 4 5  background_image: + mode: normal #normal or random + normal_url: /img/1.jpg  random_max: 110 random_url: https://sariay.github.io/Random-img/   使用unplash..随机图片..，请确保参数mode设为normal，然后设置参数normal_url的值  1 2 3 4 5  background_image: + mode: normal #normal or random + normal_url: https://source.unsplash.com/collection/954550/1920x1080  random_max: 110 random_url: https://sariay.github.io/Random-img/   使用自定义..随机图片..，请确保参数mode设为random，然后设置参数random_max、random_url的值   第一步、fork 随机图片集； 第二步、开启你所fork的仓库的page服务； 第三步、获取相对地址； 第四步、设置random_url为获得的相对地址。  1 2 3 4 5  background_image: + mode: random #normal or random  normal_url: https://source.unsplash.com/collection/954550/1920x1080 + random_max: 110 + random_url: https://sariay.github.io/Random-img/   你可以将随机图片集上传到云（腾讯云、七牛云等），然后获取**https://....../Random-img/**格式的地址，最后将random_url的值设置为该地址。\n你也可以在主题目录下的img文件夹中新建Random-img文件夹，将0.jpg、1.jpg、2.jpg、3.jpg……110.jpg命名格式的图片放入其中，然后将random_url的值设置为**/img/Random-img/**。\n图片的命名使用连续的整数，random_max的值小于等于（0、1、2、3…..110）的最大整数。（ps：如你偏爱访问速度🙃，尽可能使用固定图片）\n\r随机名言与当地时间 每次刷新网页，网页页头展示一条随机名言，获取并展示该时区的标准时间。\n1 2 3 4 5 6 7 8  # show motto motto: enable: true # show current time + #This is only a demo, please go to \"https://time.is\" to set your city time! timejs: enable: true   编辑主题配置文件，设置motto和timejs下的enable为true的参数即可。\n预加载遮罩 预加载遮罩的作用为：确保背景图片加载完成和背景构造完成。 当背景加载并构造完成时，主题立即移除遮罩。预加载行为的超时时间默认设为10s，即最多10s左右后，不管背景是否加载并构造完成，主题都移除遮罩。你可以决定是否使用：\n1 2 3 4 5  # 002-PROLOADER # animation: spinner | transition | cyclic preloader: + enable: true + animation: transition   编辑主题配置文件，设置preloader下的enable为true并设置animation参数（spinner, transition or cyclic）。\n首页文章展示样式 首页文章展示有两种模式：..图文模式..cart和..纯净模式..pure\n编辑主题配置文件，设置index_style的参数即可。\n1 2 3 4 5 6 7  # 003-INDEX # index-style: pure | cart + index_style: cart  # index_cart_cover + cover: /img/cart_cover.jpg + lazy_image: /img/placeholder.jpg   未设置图片的文章默认设置cover路径下的图片，文章图片未加载出来时显示lazy_image下的图片\r设置文章封面图 在每篇文章的头部添加cover标签设置每篇文章的背景，路径可为相对路径或绝对路径。\n1 2 3 4 5 6 7 8 9  ---  title: title date: 2019-01-01 08:00:00 tags: [tag1, tag2, tag3] categories: Note description: abstract: + cover: /img/1.jpg ---   首页的分页 hexo博客默认首页分页，编辑站点配置文件，设置参数per_page为1、2、3…..以达到分页目的，0则不分页。\n1 2 3 4 5 6 7 8  # Home page setting # path: Root path for your blogs index page. (default = '') # per_page: Posts displayed per page. (0 = disable pagination) # order_by: Posts order. (Order by date descending by default) +index_generator:  path: '' + per_page: 5  order_by: -date   文字的截断 编辑主题配置文件 excerpt_cart为图文模式的截取字数，推荐小于等于100; excerpt_pure为纯净模式的截取字数，推荐字数为300; excerpt_link为阅读更多按钮展示与否的开关。\n1 2 3 4  # post_excerpt for index page excerpt_cart: 80 excerpt_pure: 300 excerpt_link: true   其他page的使用 归档页(archive) Annie主题的归档页按年归档，不分页。当然，可以置参数archive_generator.per_page（站点配置文件）为1、2、3…..以达到分页目的。\nAnnie主题中无效，分页是对该页面[主页、归档页、标签页、分类页]的文章进行分页，即每次（每页）展示指定数量的文章\n\r```yml\rarchive: 1\rcategory: 1\rtag: 1\rarchive_generator: per_page: 10\ntag_generator: per_page: 0\ncategory_generator: per_page: 0\n### 分类页(categories)\r执行命令`$ hexo new page categories`，..创建分类页..\r```bash\r$ hexo new page categories\r编辑..站点目录..下的source/categories/index.md\n1 2 3 4 5  --- title: categories date: 2018-09-11 20:31:03 + type: \"categories\" ---   标签页(tags) 执行命令$ hexo new page tags，..创建标签页..\n1  $ hexo new page tags   编辑..站点目录..下的source/tags/index.md\n1 2 3 4 5  --- title: tags date: 2018-09-11 21:41:02 + type: \"tags\" ---   关于页(about) 执行$ hexo new page about命令，..创建关于页..\n1  $ hexo new page about   编辑..站点目录..下的source/about/index.md\n1 2 3 4 5 6 7 8 9 10  --- title: about date: 2018-09-11 20:30:08 ---  ---  + \u003cfont color=#000000 size=4\u003e这里可以添加介绍文字\u003c/font\u003e  ---   相册页(gallery) 执行命令$ hexo new page gallery，..创建相册页..\n1  $ hexo new page gallery   编辑..站点目录..下的source/gallery/index.md\n1 2 3 4 5  --- title: gallery date: 2019-11-21 21:54:19 + type: \"gallery\" ---   打开文件data.json（Annie/source/plugin/gallerypage/data.json）, 按照json语法在数组[……]中添加gallery的图片数据，请设置合适的eWidth、eHeight的值。\n[\r{}, {\r\"thumbnail\": \"https://img.jpg\", //小图路径\r\"enlarged\": \"https://img.jpg\",\t//大图路径（可与小图一致）\r\"title\": \"百里守约\",\t//图片标题\r\"categories\": [{\r\"id\": 9,\t//根据id来进行分类\r\"title\": \"百里玄策\",\r\"photo_count\": 41787,\t//可忽略\r\"links\": {\t//可忽略\r\"self\": \"https://img.jpg\",\r\"photos\": \"https://img.jpg\"\r}\r}\r],\r\"tWidth\": 800.6130030959752,\t//小图相对宽度\r\"tHeight\": 500,\t//小图相对高度\r\"eWidth\": 3630,\t//大图相对宽度\r\"eHeight\": 2907\t//大图相对高度\r},\r{}\r]\r当然，你可以将该文件data.json移至其他目录，在主题配置文件中相应地修改路径gallery_data\n1 2 3 4 5 6 7  # gallery page # gallery_format: natural | square gallery_format: natural # one time to load 4 rows or other count, 0 to load img automatically when scrolling.(0,1,2,3,4,5,6......) gallery_limit: 0 # data url + gallery_data: plugin/gallerypage/data.json   站内搜索 若此时仍未配置站内搜索，则执行命令，..安装插件..hexo-generator-search-zip\n1  $ npm install hexo-generator-search-zip --save   编辑..站点目录..下的_config.yml，添加如下语句\n1 2 3 4 5 6  search: path: search.json zipPath: search.zip versionPath: searchVersion.txt field: post #field: post, page or all（3个可选参数）   编辑..主题目录..下的_config.yml，添加如下语句\n1 2 3 4 5 6 7 8 9  # Local search # Dependencies: https://github.com/flashlab/hexo-generator-search local_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 2   文章页问题 相关的文章 文章页将展示与当前文章具有相同分类、相同标签的系列文章。\n 排序规则：分类\u003e标签\u003e时间\u003e不相关文章。\n 你可以决定是否使用该模块，posts_limit为显示的文章篇数，posts_excerpt为每篇文章的文字截取数量。\n主题配置文件中：\n# 04-POST\r# post_relate\rrelate:\renable: true\rposts_limit: 10\rposts_excerpt: 120\r 只有全站博客文章篇数..大于1..且relate.enable..为真..时，该模块有效。\n 阅读量计数 对于leancloud_count，你必须设置appid、appkey； 对于busuanzi_count，你只需要开启它即可。\n leancloud计数  1 2 3 4 5 6 7 8 9 10 11 12 13 14  # post_count leancloud_count: + enable: true + appid: 'dXz' + appkey: 'wzG'  like_post: enable: true + visit_post:  enable: true topN_post: enable: true #param1 for topN_post limit: 10 #param2 for topN_post busuanzi_count: enable: true   如果你使用过Valine评论插件，那么leancloud_count的使用十分简单。如果你没有使用过，请参考文章Hexo博客next主题添加文章阅读量统计功能创建leancloud应用，创建counter类，并获取其appid、appkey，且设置上面的appid、appkey为相应的值，最后开启visit_post。\n卜蒜子计数  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  # post_count leancloud_count: enable: false appid: 'dX--' appkey: 'dX--' like_post: enable: true visit_post: enable: true topN_post: enable: true #param1 for topN_post limit: 10 #param2 for topN_post busuanzi_count: + enable: true   该模块放置于页脚，文章页面只显示文章的阅读量，其他页面只显示总访问量和访客数（等待完善）\n文章点赞 如果你完成了8.2阅读量计数的leancloud计数的设置，那么只需要开启like_post。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  # post_count leancloud_count: enable: false appid: 'dX--' appkey: 'dX--' + like_post: + enable: true  visit_post: enable: true topN_post: enable: true #param1 for topN_post limit: 10 #param2 for topN_post busuanzi_count: enable: true   文章排行 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  # post_count leancloud_count: enable: false appid: 'dX--' appkey: 'dX--' like_post: enable: true visit_post: enable: true + topN_post: + enable: true #param1 for topN_post + limit: 10 #param2 for topN_post  busuanzi_count: enable: true   如果你完成了8.2阅读量计数的leancloud计数的设置，那么只需要开启topN_post。（文章阅读排行依赖于8.2阅读量计数）\n文章目录 若一篇文章的正文存在h1、h2、h3等标题，则文章页展示目录按钮。点击目录按钮，页面左侧展示文章目录。当屏幕宽度小于1024px或页面滚动高度大于文章正文高度时，页面隐藏文章目录。\n# post_toc\rpost_toc:\renable: true\rkatelog: true\r数学公式 先设置主题配置文件的mathjax参数，再于文章的Front-matter中添加mathjax: true\n1 2 3 4  # post_mathJax mathjax: + enable: true    1 2 3 4 5 6 7 8  title: Annie主题使用说明 date: 2018-08-27 20:16:19 cover: /img/post-cover/74.jpg + mathjax: true categories: HEXO博客 tags: - 说明 - other tag   代码块高亮 综合考虑hexo自身的代码高亮插件和hexo-pism-plugin高亮插件的特性及代码块解析规则，2019-04-27日更新后，主题弃用hexo-prism-plugin插件，参考\u0026使用了next主题的代码高亮风格。\n 编辑主题配置文件，选择并设置highlight_theme的值  1 2 3 4 5  # post_code # highlight_theme: normal | night | night blue | night bright | night eighties + highlight_theme: night bright code_copy: enable: true   编辑站点配置文件，设置highlight的值  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  # Writing new_post_name: :title.md # File name of new posts default_layout: post titlecase: false # Transform title into titlecase external_link: true # Open external links in new tab filename_case: 0 render_drafts: false post_asset_folder: true relative_link: false future: true +highlight: + enable: true + line_number: true  auto_detect: false tab_replace:   代码块复制 只有theme.code_copy.enable为真且config.highlight.enable为真时，代码块的复制功能才有效\n1 2 3 4 5  # post_code # highlight_theme: normal | night | night blue | night bright | night eighties highlight_theme: night bright code_copy: + enable: true   文章评论功能 Hexo-theme-Annie主题集成了gitalk、DesertsP版的valine、livere评论插件。\n   序号 评论插件 使用方法     1 gitalk 正式文档、Annie主题+Gitalk   2 valine 正式文档、加个Valine评论系统   3 livere 为Hexo博客添加LiveRe评论系统    注：对于gitalk，你必须设置clientID、clientSecret；对于Valine，你必须设置appid、appkey；对于livere，你必须设置livere_uid。\r文章分享功能 Hexo-theme-Annie主题集成了addThis、baiduShare、shareThis、socialShare分享插件。\n   序号 分享插件 使用方法     1 addThis 登录addThis获取应用的账户id   2 baiduShare 直接使用   3 shareThis 登录shareThis获取应用的账户id   4 socialShare 直接使用    注：使用addThis、shareThis时，应注意关闭浏览器的内容拦截插件。\r站点分析    序号 分析插件 使用方法     1 卜算子分析 直接使用   2 baidu_analytics 需获取账户id   3 cnzz_analytics 需获取账户id   4 google_analytics 需获取账户id   5 tencent_analytics 需获取账户id    其他的问题 社交链接 直接增加相应的社交图标、社交链接即可\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  # social social: github: url: http://github.com/ icon: fa fa-github weibo: url: http://github.com/ icon: fa fa-weibo pinterest: url: http://github.com/ icon: fa fa-pinterest instagram: url: http://github.com/ icon: fa fa-instagram twitter: url: http://github.com/ icon: fa fa-twitter rss: url: /atom.xml icon: fa fa-rss + digg: + url: http://github.com/ + icon: fa fa-digg    RSS订阅 主题将使用到 hexo-generator-feed 插件来生成atom.xml 文件。\n执行命令安装该插件：\n1  npm install hexo-generator-feed --save   编辑站点配置文件，添加相应的参数：\n+feed:\r+ type: atom\r+ path: atom.xml\r+ limit: 20\r执行 hexo clean \u0026 hexo g 重新生成博客文件，你将在 hexo/public/ 目录下看到 atom.xml 文件，说明你已经安装成功了。 （rss的社交链接见于上一节：1. 社交链接）\n版权声明 对于copyright ，since为站点建立年份，cotent_author为站点作者。\n_config.yml\r# copyright since: 2018\rcotent_author: author\r点击页面浮现桃心 # when click, emerge heart\rlove:\renable: true\r# back to top\rtotop:\renable: true\r对于love，若设置为true，则点击页面时，会出现随机颜色的桃心💚💛💕。对于totop，若设置为true，则启用返回顶部按钮。\n开发定制问题 主题项目结构 ANNIE\r├─languages\t#国际化语言支持\r├─layout\t#html页面模板\r│ └─_partial\r│ ├─custom\r│ ├─plugin\r│ │ ├─clipboard\r│ │ ├─comment\r│ │ ├─share\r│ │ └─statistics\r│ ├─post\r│ └─widget\r├─scripts\t#站点脚本\r└─source\t#主题资源\r├─css\r│ └─_highlight\r├─img\r│ ├─post-cover\r│ ├─quote\r│ └─random\r├─js\r└─plugin\r├─chinese\r├─clipboard\r├─comment\r├─fancybox\r├─gallerypage\r│ └─images\r├─imgLazyLoader\r├─imgResize\r├─love\r├─motto\r├─nicescroll\r├─search\r├─toc\r└─vibrant\rAnnie主题基于hexo 3.8.0、ejs、styl开发而成。一般来说，如果你想修改页面的html结构，请到layout目录下添加或修改相应的ejs文件； 如果你想修改页面元素的css样式，请到source/css目录下添加或修改相应的styl文件；如果你想添加一些js代码，原则上，自定义代码片段应添加于source/js/main.js文件中，引入的js文件应放置于source/plugin目录下\n主题字体问题 主题整体字体大小，修改html标签的font-size属性\n1 2 3 4  html { - font-size: 16px; + font-size: 14px; }   主题整体字体族，修改body标签的font-family属性\n1 2 3 4  body { - font-family: Ovo, Georgia, STZhongsong, \"Microsoft YaHei\", serif; + font-family: \"PingFang SC\", \"Microsoft YaHei\"; }   文章详情页字体族，修改#layout-post类的font-family属性\n1 2 3  #layout-post { + font-family: \"Source Sans Pro\", \"Segoe UI\"; }   你可以检索style文件，查询相应的标签或类，进而设置相应元素的属性。\n页头菜单颜色 页头菜单颜色会根据背景的主题色变化非黑即白。亦即主题色为浅色时，字体为黑；主题色为深色时，字体为白。你可以参考main.js中函数Annie_ColorExtraction(img)。\n","description":"","tags":["Hexo","Annie"],"title":"Annie主题详细使用说明","uri":"/posts/annie%E4%B8%BB%E9%A2%98%E8%AF%A6%E7%BB%86%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"},{"categories":["TECH","计算机网络"],"content":"概念 HTTP ..HTTP.. （HyperText Transfer Protocol：超文本传输协议）是一种用于分布式、协作式和超媒体信息系统的应用层协议。 简单来说就是一种发布和接收 HTML 页面的方法，被用于在 Web 浏览器和网站服务器之间传递信息。\nHTTPS ..HTTPS.. （Hypertext Transfer Protocol Secure：超文本传输安全协议或HTT Pover SSL）是一种透过计算机网络进行安全通信的传输协议。\n区别 HTTP  HTTP 默认工作在 TCP 协议 80 端口 用户访问网站 以http://打头 HTTP 协议以明文方式发送内容，不安全   注：HTTP 协议不提供任何方式的数据加密，如果攻击者截取了Web浏览器和网站服务器之间的传输报文，就可以直接读懂其中的信息，因此，HTTP协议不适合传输一些敏感信息，比如：信用卡号、密码等支付信息。\n HTTPS  HTTPS 默认工作在 TCP 协议443端口 用户访问网站 以https://打头 HTTPS 经由 HTTP 进行通信，但利用 SSL（Secure Socket Layer,安全套接字层）/TLS（Transport Layer Security,运输层安全） 来加密数据包。安全   注：HTTPS 开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。\n  你也可以说：HTTPS = HTTP + SSL HTTPS 在 HTTP 应用层的基础上使用安全套接字层作为子层。    在讲HTTPS原理之前，先介绍下两类密码体制\n 当你需要在一个购物网站输入账号以及密码时，含有你的账号与密码信息的数据会被发送到服务器，在发送的过程中，数据会有两种加密形式—— ..共享密钥加密.. 和 ..公开密钥加密..。\n  共享密钥加密可以这样理解，服务器为了使数据传输更安全，送给你一把钥匙，这把钥匙可以将数据锁在一个盒子里，当然也可以打开已经锁上的盒子。当数据送至服务器时，服务器会用同样的钥匙打开盒子。这种方法的坏处是，一旦贼人得到钥匙，便可以打开已经锁上的盒子。而公开密钥则避免了这种情况。\n  公开密钥加密会使用两把钥匙，服务器会发送给你一把只能锁上盒子却不能打开盒子的钥匙，而服务器自己会留一把可以打开盒子的钥匙，这样就避免了钥匙在中途被其他人抢走风险。当服务器发回响应时会用同样的方式，只不过留有可以打开盒子钥匙的人变成了你。\n 密码体制 密码体制1——对称密钥密码体制 对称密钥密码体制又称为..共享秘钥加密..，（加密密钥与解密密钥使用相同的密码）  客户端与服务器使用相同的密码对内容进行加密与解密 但这样也必须将密钥也发给对方，造成了另一个问题（怎样将密钥安全的发给对方？） 任何人只要获取了密钥便可解密密文 一旦第三方攻击者获得了密钥，加密也就毫无意义  密码体制2——公钥密码体制 公钥密码体制又称为 ..公开秘钥加密..，（加密密钥与解密密钥使用不同的密码（但有关联））  加密密钥也称为公钥（public key），是向公众公开的 解密密钥也称为私钥或秘钥（secret key），是需要保密的  简要过程 HTTP  浏览器打开一个 TCP 连接 浏览器发送 HTTP 请求到服务器端 服务器发送 HTTP 回应信息到浏览器 TCP 连接关闭  SSL  验证服务器端 允许客户端和服务器端选择加密算法和密码，确保双方都支持 验证客户端(可选) 使用公钥加密技术来生成共享加密数据 创建一个加密的 SSL 连接 基于该 SSL 连接传递 HTTP 请求  HTTPS  使用 HTTPS 连接时，服务器要求有公钥和签名的证书。 当使用 https 连接，服务器响应初始连接，并提供它所支持的加密方法。 作为回应，客户端选择一个连接方法，并且客户端和服务器端交换证书验证彼此身份。 完成之后，在确保使用相同密钥的情况下传输加密信息，然后关闭连接。 为了提供 https 连接支持，服务器必须有一个公钥证书，该证书包含经过证书机构认证的密钥信息，大部分证书都是通过第三方机构授权的，以保证证书是安全的。   注：如果某个网站要求你填写信用卡信息，首先你要检查该网页是否使用 https 加密连接，如果没有，那么请 ..不要输入.. 任何敏感信息如信用卡号。\n ","description":"","tags":["Http","密码体制"],"title":"浅谈HTTP与HTTPS","uri":"/posts/%E6%B5%85%E8%B0%88http%E4%B8%8Ehttps/"},{"categories":["TECH","Hexo"],"content":"新建一篇文章 命令：\n$ hexo new \"文章标题\" 例如，执行命令：hexo new \"Helloworld\",\\source\\_posts文件夹下会出现对应的文件Helloworld.md,打开即可编辑。\n为文章设置标签 在新建的文章头部tags:标签后输入标签名（冒号与标签名之间有空格）\n --- title: Helloworld date: 2018-09-12 10:15:53 tags: --- 例如，tags: Hexo,这样就为本篇文章贴上了Hexo标签，如果想加入多个标签，则输入tags: [标签1, 标签2]\n为文章设置分类 在tags标签下加入categories，并添加自定义分类(如：article)，如下:\n --- title: Helloworld date: 2018-09-12 10:15:53 tags: Hexo categories: article --- 字体样式 语法：\n*斜体*，_斜体_ **粗体** ***加粗斜体*** 效果： 斜体，斜体 粗体 加粗斜体\n字体大小与颜色 语法：\n\u003cfont face=\"黑体\"\u003e我是黑体字\u003c/font\u003e \u003cfont face=\"楷体\"\u003e我是楷体\u003c/font\u003e \u003cfont face=\"STCAIYUN\"\u003e我是华文彩云\u003c/font\u003e \u003cfont color=#0099ff size=2 face=\"幼圆\"\u003e我是幼圆 size=2 color=#0099ff\u003c/font\u003e \u003cfont color=#00ffff size=3\u003esize=3 color=#00ffff\u003c/font\u003e \u003cfont color=gray size=4\u003esize=4 color=gray\u003c/font\u003e 效果： 我是黑体字 我是楷体 我是华文彩云 我是幼圆 size=2 color=#0099ff size=3 color=#00ffff size=4 color=gray\n文字底色 语法：\n\u003ctable\u003e\u003ctr\u003e\u003ctd bgcolor=PowderBlue\u003e背景色：PowderBlue，颜色值：#B0E0E6，rgb(176, 224, 230)\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e 效果：\n背景色：PowderBlue，颜色值： #B0E0E6，rgb(176, 224, 230) 分级标题 语法：\n# 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 （注：#与标题之间有空格）\n超链接 语法：\n链接：[百度](https://www.baidu.com) 效果： 链接：百度\n插入图片 首先将图片放入source/image下，使用如下命令：\n语法：\n![](/image/egg.jpg) 插入视频 1 2  //方法一 \u003cvideo src=\"/videos/a.mp4\" poster=\"/images/b.jpg\" style=\"object-fit:fill\" controls\u003e\u003c/video\u003e   //方法二 ![](/videos/a.mp4 \"说明文字\") 效果： 添加音乐 在网页搜索想要加入的音乐，点击生成外链播放器复制代码到博文中列表 无序列表 语法： * 无序列表1 + 无序列表2 - 无序列表3\n效果：\n 无序列表1   无序列表2   无序列表3  有序列表 语法： 1.有序列表1 2.有序列表2 3.有序列表3\n效果：\n1.有序列表1\n2.有序列表2\n3.有序列表3\n表格 语法： |表头1|表头2|表头3|表头4 |:-:|:-:|:-:|:-:| |内容1|内容2|内容3|内容4|\n效果：\n   表头1 表头2 表头3 表头4     内容1 内容2 内容3 内容4    ","description":"","tags":["Hexo","Markdown"],"title":"Hexo写博客及语法规则","uri":"/posts/%E7%94%A8hexo%E5%86%99%E5%8D%9A%E5%AE%A2%E5%8F%8A%E8%AF%AD%E6%B3%95%E8%A7%84%E5%88%99/"},{"categories":["TECH","Hexo"],"content":"搭建环境 在搭建个人博客之前，首先我们配置下所需的一些环境，下载并安装以下两个工具\n  node.js\n  git\n  安装过程比较简单，直接下一步即可。\n 注意记住它们的安装路径。\n 安装好之后，打开命令窗口（按住Win+R后输入CMD） 分别输入 node -v 、npm -v及git --version 查看刚才我们安装的软件的版本 能看到上面红色框中的版本号就说明我们已经将node.js和git装好了。\n配置GitHub 接下来我们需要一个github账号并对它进行配置。\n生成SSH key 打开Git Bash，输入ssh-keygen -t rsa然后按三下回车 接着就会在C:\\Users\\Administrator.ssh目录下生成id_rsa和id_rsa.pub两个文件，id_rsa是密钥，id_rsa.pub是公钥\n接下来需要将id_rsa.pub的内容添加到GitHub上，这样本地的id_rsa密钥才能跟GitHub上的id_rsa.pub公钥进行 ..配对.. ，才能够授权成功。\n在GitHub上添加SSH Key 进入Settings 把id_sra.pub的内容复制粘贴到key（id_sra.pub可以使用记事本打开），最后Add SSH key就可以了。\n测试是否成功 SSH key 添加成功之后，输入ssh -T git@github.com进行测试，如果出现以下提示证明添加成功了。 创建 GitHub 仓库 注意：项目名称一定要使用 你的名字 + .github.io 设置本地博客的配置 安装Hexo 在你认为合适的地方创建一个文件夹，然后在文件夹空白处按住Shift+鼠标右键，然后点击在此处打开命令行窗口。（同样要记住啦，下文中会使用在当前目录打开命令行来代指上述的操作）\n 我的电脑出现了点问题，右键不能用，所以我这里先打开命令行然后自己进入Hexo文件夹\n 在命令行输入npm install -g hexo 然后输入 npm install hexo --save这时候你会看到命令窗口刷了一堆白字，然后输入 hexo -v 查看hexo是否安装成功了。\n初始化Hexo 在命令窗口中，继续输入 \"hexo init\"，等待下载好了之后输入 \"hexo s\" 出现以上信息时就可以打开浏览器了，在地址栏中输入 http://localhost:4000/ 我们就可以看到如下图的界面，这个就是我们的博客。 新建文章 命令窗口输入hexo new 'filename'我们的文件夹（F:\\Hexo\\source\\\\_posts）下面就会生成一个新的md文件\n发布博客 复制我们的GitHub项目地址，比如我这边是：https://github.com/zccon/zccon.github.io.git 然后打开我们新建的文件夹（F:\\Hexo）下面生成的_config.yml文件，在最下方作如下修改  deploy: 是部署的意思 type: git 就是使用 git 进行部署 repo: github仓库地址\n 接下来回到命令窗口，输入 npm install hexo-deployer-git --save\n安装好Git上传插件之后，输入 hexo g，然后输入 hexo d就可以将我们的博客上传到我们的GitHub了，而且以后更新文章就只需要用这两个命令就可以了。这样别人也可以通过 https://yourname.github.io来访问我们的博客了（开头一定要用https，yourname是你的github的名字）。\n","description":"","tags":["Hexo","Github"],"title":"Hexo搭建个人博客","uri":"/posts/hexo+github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"}]
